/* The following code was generated by JFlex 1.4.3 on 17/11/19 03:03 PM */

package AnalisiSemanticoSQL;
import java_cup.runtime.Symbol;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 17/11/19 03:03 PM from the specification file
 * <tt>C:/Users/luise/ProyectoCompiladores1/AnalisiSemanticoSQL/src/AnalisiSemanticoSQL/LexerCup.flex</tt>
 */
public class LexerCup implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\10\1\3\1\2\1\0\1\3\1\1\16\10\4\0\1\52\1\72"+
    "\1\0\1\66\1\7\1\54\1\73\1\22\1\61\1\62\1\5\1\21"+
    "\1\56\1\6\1\17\1\4\1\12\1\12\1\53\7\16\1\0\1\55"+
    "\1\67\1\70\1\71\1\0\1\65\1\23\1\41\1\33\1\24\1\25"+
    "\1\43\1\42\1\37\1\35\1\50\1\45\1\15\1\40\1\13\1\32"+
    "\1\31\1\51\1\30\1\36\1\27\1\14\1\47\1\44\1\26\1\34"+
    "\1\46\1\57\1\0\1\60\1\0\1\11\1\0\4\7\1\20\25\7"+
    "\1\63\1\74\1\64\1\0\41\10\2\0\4\7\4\0\1\7\2\0"+
    "\1\10\7\0\1\7\4\0\1\7\5\0\27\7\1\0\37\7\1\0"+
    "\u01ca\7\4\0\14\7\16\0\5\7\7\0\1\7\1\0\1\7\21\0"+
    "\160\10\5\7\1\0\2\7\2\0\4\7\10\0\1\7\1\0\3\7"+
    "\1\0\1\7\1\0\24\7\1\0\123\7\1\0\213\7\1\0\5\10"+
    "\2\0\236\7\11\0\46\7\2\0\1\7\7\0\47\7\7\0\1\7"+
    "\1\0\55\10\1\0\1\10\1\0\2\10\1\0\2\10\1\0\1\10"+
    "\10\0\33\7\5\0\3\7\15\0\5\10\6\0\1\7\4\0\13\10"+
    "\5\0\53\7\37\10\4\0\2\7\1\10\143\7\1\0\1\7\10\10"+
    "\1\0\6\10\2\7\2\10\1\0\4\10\2\7\12\10\3\7\2\0"+
    "\1\7\17\0\1\10\1\7\1\10\36\7\33\10\2\0\131\7\13\10"+
    "\1\7\16\0\12\10\41\7\11\10\2\7\4\0\1\7\5\0\26\7"+
    "\4\10\1\7\11\10\1\7\3\10\1\7\5\10\22\0\31\7\3\10"+
    "\104\0\1\7\1\0\13\7\67\0\33\10\1\0\4\10\66\7\3\10"+
    "\1\7\22\10\1\7\7\10\12\7\2\10\2\0\12\10\1\0\7\7"+
    "\1\0\7\7\1\0\3\10\1\0\10\7\2\0\2\7\2\0\26\7"+
    "\1\0\7\7\1\0\1\7\3\0\4\7\2\0\1\10\1\7\7\10"+
    "\2\0\2\10\2\0\3\10\1\7\10\0\1\10\4\0\2\7\1\0"+
    "\3\7\2\10\2\0\12\10\4\7\7\0\1\7\5\0\3\10\1\0"+
    "\6\7\4\0\2\7\2\0\26\7\1\0\7\7\1\0\2\7\1\0"+
    "\2\7\1\0\2\7\2\0\1\10\1\0\5\10\4\0\2\10\2\0"+
    "\3\10\3\0\1\10\7\0\4\7\1\0\1\7\7\0\14\10\3\7"+
    "\1\10\13\0\3\10\1\0\11\7\1\0\3\7\1\0\26\7\1\0"+
    "\7\7\1\0\2\7\1\0\5\7\2\0\1\10\1\7\10\10\1\0"+
    "\3\10\1\0\3\10\2\0\1\7\17\0\2\7\2\10\2\0\12\10"+
    "\1\0\1\7\17\0\3\10\1\0\10\7\2\0\2\7\2\0\26\7"+
    "\1\0\7\7\1\0\2\7\1\0\5\7\2\0\1\10\1\7\7\10"+
    "\2\0\2\10\2\0\3\10\10\0\2\10\4\0\2\7\1\0\3\7"+
    "\2\10\2\0\12\10\1\0\1\7\20\0\1\10\1\7\1\0\6\7"+
    "\3\0\3\7\1\0\4\7\3\0\2\7\1\0\1\7\1\0\2\7"+
    "\3\0\2\7\3\0\3\7\3\0\14\7\4\0\5\10\3\0\3\10"+
    "\1\0\4\10\2\0\1\7\6\0\1\10\16\0\12\10\11\0\1\7"+
    "\7\0\3\10\1\0\10\7\1\0\3\7\1\0\27\7\1\0\12\7"+
    "\1\0\5\7\3\0\1\7\7\10\1\0\3\10\1\0\4\10\7\0"+
    "\2\10\1\0\2\7\6\0\2\7\2\10\2\0\12\10\22\0\2\10"+
    "\1\0\10\7\1\0\3\7\1\0\27\7\1\0\12\7\1\0\5\7"+
    "\2\0\1\10\1\7\7\10\1\0\3\10\1\0\4\10\7\0\2\10"+
    "\7\0\1\7\1\0\2\7\2\10\2\0\12\10\1\0\2\7\17\0"+
    "\2\10\1\0\10\7\1\0\3\7\1\0\51\7\2\0\1\7\7\10"+
    "\1\0\3\10\1\0\4\10\1\7\10\0\1\10\10\0\2\7\2\10"+
    "\2\0\12\10\12\0\6\7\2\0\2\10\1\0\22\7\3\0\30\7"+
    "\1\0\11\7\1\0\1\7\2\0\7\7\3\0\1\10\4\0\6\10"+
    "\1\0\1\10\1\0\10\10\22\0\2\10\15\0\60\7\1\10\2\7"+
    "\7\10\4\0\10\7\10\10\1\0\12\10\47\0\2\7\1\0\1\7"+
    "\2\0\2\7\1\0\1\7\2\0\1\7\6\0\4\7\1\0\7\7"+
    "\1\0\3\7\1\0\1\7\1\0\1\7\2\0\2\7\1\0\4\7"+
    "\1\10\2\7\6\10\1\0\2\10\1\7\2\0\5\7\1\0\1\7"+
    "\1\0\6\10\2\0\12\10\2\0\4\7\40\0\1\7\27\0\2\10"+
    "\6\0\12\10\13\0\1\10\1\0\1\10\1\0\1\10\4\0\2\10"+
    "\10\7\1\0\44\7\4\0\24\10\1\0\2\10\5\7\13\10\1\0"+
    "\44\10\11\0\1\10\71\0\53\7\24\10\1\7\12\10\6\0\6\7"+
    "\4\10\4\7\3\10\1\7\3\10\2\7\7\10\3\7\4\10\15\7"+
    "\14\10\1\7\17\10\2\0\46\7\1\0\1\7\5\0\1\7\2\0"+
    "\53\7\1\0\u014d\7\1\0\4\7\2\0\7\7\1\0\1\7\1\0"+
    "\4\7\2\0\51\7\1\0\4\7\2\0\41\7\1\0\4\7\2\0"+
    "\7\7\1\0\1\7\1\0\4\7\2\0\17\7\1\0\71\7\1\0"+
    "\4\7\2\0\103\7\2\0\3\10\40\0\20\7\20\0\125\7\14\0"+
    "\u026c\7\2\0\21\7\1\0\32\7\5\0\113\7\3\0\3\7\17\0"+
    "\15\7\1\0\4\7\3\10\13\0\22\7\3\10\13\0\22\7\2\10"+
    "\14\0\15\7\1\0\3\7\1\0\2\10\14\0\64\7\40\10\3\0"+
    "\1\7\3\0\2\7\1\10\2\0\12\10\41\0\3\10\2\0\12\10"+
    "\6\0\130\7\10\0\51\7\1\10\1\7\5\0\106\7\12\0\35\7"+
    "\3\0\14\10\4\0\14\10\12\0\12\10\36\7\2\0\5\7\13\0"+
    "\54\7\4\0\21\10\7\7\2\10\6\0\12\10\46\0\27\7\5\10"+
    "\4\0\65\7\12\10\1\0\35\10\2\0\13\10\6\0\12\10\15\0"+
    "\1\7\130\0\5\10\57\7\21\10\7\7\4\0\12\10\21\0\11\10"+
    "\14\0\3\10\36\7\15\10\2\7\12\10\54\7\16\10\14\0\44\7"+
    "\24\10\10\0\12\10\3\0\3\7\12\10\44\7\122\0\3\10\1\0"+
    "\25\10\4\7\1\10\4\7\3\10\2\7\11\0\300\7\47\10\25\0"+
    "\4\10\u0116\7\2\0\6\7\2\0\46\7\2\0\6\7\2\0\10\7"+
    "\1\0\1\7\1\0\1\7\1\0\1\7\1\0\37\7\2\0\65\7"+
    "\1\0\7\7\1\0\1\7\3\0\3\7\1\0\7\7\3\0\4\7"+
    "\2\0\6\7\4\0\15\7\5\0\3\7\1\0\7\7\16\0\5\10"+
    "\32\0\5\10\20\0\2\7\23\0\1\7\13\0\5\10\5\0\6\10"+
    "\1\0\1\7\15\0\1\7\20\0\15\7\3\0\33\7\25\0\15\10"+
    "\4\0\1\10\3\0\14\10\21\0\1\7\4\0\1\7\2\0\12\7"+
    "\1\0\1\7\3\0\5\7\6\0\1\7\1\0\1\7\1\0\1\7"+
    "\1\0\4\7\1\0\13\7\2\0\4\7\5\0\5\7\4\0\1\7"+
    "\21\0\51\7\u0a77\0\57\7\1\0\57\7\1\0\205\7\6\0\4\7"+
    "\3\10\2\7\14\0\46\7\1\0\1\7\5\0\1\7\2\0\70\7"+
    "\7\0\1\7\17\0\1\10\27\7\11\0\7\7\1\0\7\7\1\0"+
    "\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0\7\7\1\0"+
    "\7\7\1\0\40\10\57\0\1\7\u01d5\0\3\7\31\0\11\7\6\10"+
    "\1\0\5\7\2\0\5\7\4\0\126\7\2\0\2\10\2\0\3\7"+
    "\1\0\132\7\1\0\4\7\5\0\51\7\3\0\136\7\21\0\33\7"+
    "\65\0\20\7\u0200\0\u19b6\7\112\0\u51cd\7\63\0\u048d\7\103\0\56\7"+
    "\2\0\u010d\7\3\0\20\7\12\10\2\7\24\0\57\7\1\10\4\0"+
    "\12\10\1\0\31\7\7\0\1\10\120\7\2\10\45\0\11\7\2\0"+
    "\147\7\2\0\4\7\1\0\4\7\14\0\13\7\115\0\12\7\1\10"+
    "\3\7\1\10\4\7\1\10\27\7\5\10\20\0\1\7\7\0\64\7"+
    "\14\0\2\10\62\7\21\10\13\0\12\10\6\0\22\10\6\7\3\0"+
    "\1\7\4\0\12\10\34\7\10\10\2\0\27\7\15\10\14\0\35\7"+
    "\3\0\4\10\57\7\16\10\16\0\1\7\12\10\46\0\51\7\16\10"+
    "\11\0\3\7\1\10\10\7\2\10\2\0\12\10\6\0\27\7\3\0"+
    "\1\7\1\10\4\0\60\7\1\10\1\7\3\10\2\7\2\10\5\7"+
    "\2\10\1\7\1\10\1\7\30\0\3\7\2\0\13\7\5\10\2\0"+
    "\3\7\2\10\12\0\6\7\2\0\6\7\2\0\6\7\11\0\7\7"+
    "\1\0\7\7\221\0\43\7\10\10\1\0\2\10\2\0\12\10\6\0"+
    "\u2ba4\7\14\0\27\7\4\0\61\7\u2104\0\u016e\7\2\0\152\7\46\0"+
    "\7\7\14\0\5\7\5\0\1\7\1\10\12\7\1\0\15\7\1\0"+
    "\5\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0\154\7\41\0"+
    "\u016b\7\22\0\100\7\2\0\66\7\50\0\15\7\3\0\20\10\20\0"+
    "\7\10\14\0\2\7\30\0\3\7\31\0\1\7\6\0\5\7\1\0"+
    "\207\7\2\0\1\10\4\0\1\7\13\0\12\10\7\0\32\7\4\0"+
    "\1\7\1\0\32\7\13\0\131\7\3\0\6\7\2\0\6\7\2\0"+
    "\6\7\2\0\3\7\3\0\2\7\3\0\2\7\22\0\3\10\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\3\6\1\11\1\12\1\13\1\14\23\6\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\2\1\1\0"+
    "\1\34\1\35\14\6\2\14\1\36\4\6\1\37\21\6"+
    "\1\40\4\6\1\41\12\6\1\42\1\6\1\43\1\6"+
    "\1\44\10\6\1\45\1\6\1\46\1\6\1\47\20\6"+
    "\1\50\4\6\1\51\3\6\1\52\1\53\15\6\1\54"+
    "\3\6\1\55\1\56\1\57\1\60\1\61\1\62\1\63"+
    "\1\64\1\65\1\66\1\0\2\34\1\0\6\6\1\67"+
    "\7\6\1\70\5\6\1\71\1\72\1\6\1\73\1\6"+
    "\1\74\1\75\1\76\15\6\1\77\16\6\1\100\30\6"+
    "\1\101\3\6\1\102\23\6\1\103\6\6\1\104\2\6"+
    "\1\105\15\6\1\106\3\6\1\107\7\6\1\110\14\6"+
    "\1\111\6\6\1\112\5\6\1\0\1\35\1\113\2\6"+
    "\1\114\12\6\1\115\1\116\1\117\2\6\1\120\2\6"+
    "\1\121\1\6\1\122\1\123\4\6\1\124\1\6\1\125"+
    "\3\6\1\126\1\127\1\6\1\130\1\131\2\6\1\132"+
    "\4\6\1\133\1\6\1\134\4\6\1\135\1\6\1\136"+
    "\1\137\1\6\1\140\1\141\14\6\1\142\2\6\1\143"+
    "\6\6\1\144\3\6\1\145\5\6\1\146\14\6\1\147"+
    "\5\6\1\150\6\6\1\151\1\6\1\152\5\6\1\153"+
    "\3\6\1\154\5\6\1\155\2\6\1\156\12\6\1\157"+
    "\1\6\1\160\4\6\1\161\3\6\1\162\2\6\1\163"+
    "\1\164\3\6\1\165\4\6\1\166\1\167\3\6\1\170"+
    "\1\171\2\6\1\172\3\6\1\173\2\6\1\174\2\6"+
    "\1\175\22\6\1\176\30\6\1\177\4\6\1\200\1\6"+
    "\1\201\1\202\1\6\1\203\7\6\1\204\3\6\1\205"+
    "\3\6\1\206\4\6\1\207\5\6\1\210\1\211\1\6"+
    "\1\212\1\6\1\213\3\6\1\214\17\6\1\215\1\216"+
    "\2\6\1\217\1\220\4\6\1\221\1\222\1\6\1\223"+
    "\1\6\1\224\11\6\1\225\1\226\5\6\1\227\7\6"+
    "\1\230\1\231\1\232\3\6\1\233\4\6\1\234\6\6"+
    "\1\235\1\236\1\237\1\240\14\6\1\241\6\6\1\242"+
    "\1\243\3\6\1\244\4\6\1\245\4\6\1\246\3\6"+
    "\1\247\1\6\1\250\1\251\1\6\1\252\4\6\1\253"+
    "\3\6\1\254\1\6\1\255\2\6\1\256\2\6\1\257"+
    "\4\6\1\260\1\6\1\261\1\262\5\6\1\263\2\6"+
    "\1\264\1\6\1\265\1\266\1\267\1\270\13\6\1\271"+
    "\1\272\3\6\1\273\2\6\1\274\2\6\1\275\5\6"+
    "\1\276\1\277\1\300\1\301\3\6\1\302\6\6\1\303"+
    "\1\6\1\304\1\305\3\6\1\306\4\6\1\307\4\6"+
    "\1\310\2\6\1\311\1\6\1\312\3\6\1\313\1\314"+
    "\1\6\1\315\3\6\1\316\1\317\1\6\1\320\2\6"+
    "\1\321\2\6\1\322\14\6\1\323\1\324\3\6\1\325"+
    "\4\6\1\326\1\6\1\0\1\327\1\330\1\6\1\331"+
    "\1\6\1\332\3\6\1\333\1\334\2\6\1\335\1\6"+
    "\1\336\1\6\1\337\1\340\4\6\1\341\1\342\3\6"+
    "\1\343\1\6\1\344\1\345\11\6\1\346\1\347\1\6"+
    "\1\350\2\6\1\351\10\6\1\352\1\6\1\353\1\6"+
    "\1\354\1\355\1\6\1\356\2\6\1\357\2\6\1\0"+
    "\2\6\1\360\3\6\1\361\7\6\1\362\2\6\1\363"+
    "\2\6\1\364\1\365\2\6\1\366\4\6\1\367\3\6"+
    "\1\370\2\6\1\371\17\6\1\372\1\0\1\373\1\6"+
    "\1\374\2\6\1\375\1\6\1\376\6\6\1\377\1\u0100"+
    "\1\6\1\u0101\1\u0102\4\6\1\u0103\1\u0104\6\6\1\u0105"+
    "\4\6\1\u0106\3\6\1\u0107\1\u0108\1\0\3\6\1\u0109"+
    "\1\u010a\1\u010b\1\u010c\1\6\1\u010d\1\u010e\6\6\1\u010f"+
    "\6\6\1\u0110\4\6\1\0\1\u0111\2\6\1\u0112\1\6"+
    "\1\u0113\1\u0114\1\u0115\3\6\1\u0116\2\6\1\u0117\2\6"+
    "\1\u0118\1\6\1\u0119\1\u011a\1\u011b\3\6\1\u011c\1\6"+
    "\1\u011d\2\6\1\u011e\1\u011f\1\u0120\1\u0121\1\u0122\5\6"+
    "\1\u0123\5\6\1\u0124\17\6\1\u0125\1\6\1\u0126\6\6"+
    "\1\u0127";

  private static int [] zzUnpackAction() {
    int [] result = new int[1177];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\75\0\172\0\267\0\75\0\364\0\u0131\0\u016e"+
    "\0\u01ab\0\u01e8\0\u0225\0\u0262\0\u01ab\0\75\0\75\0\u029f"+
    "\0\u02dc\0\u0319\0\u0356\0\u0393\0\u03d0\0\u040d\0\u044a\0\u0487"+
    "\0\u04c4\0\u0501\0\u053e\0\u057b\0\u05b8\0\u05f5\0\u0632\0\u066f"+
    "\0\u06ac\0\u06e9\0\u0726\0\75\0\75\0\75\0\u0763\0\75"+
    "\0\u07a0\0\75\0\u07dd\0\75\0\75\0\u081a\0\u0857\0\u0894"+
    "\0\u08d1\0\u090e\0\u094b\0\u0988\0\u09c5\0\u0a02\0\u0a3f\0\u0a7c"+
    "\0\u0ab9\0\u0af6\0\u0b33\0\u0b70\0\u0bad\0\u0bea\0\u0c27\0\u0c64"+
    "\0\u0ca1\0\u0cde\0\u0d1b\0\u0d58\0\75\0\75\0\u0d95\0\u0dd2"+
    "\0\u0e0f\0\u0e4c\0\u0e89\0\u0ec6\0\u0f03\0\u0f40\0\u0f7d\0\u0fba"+
    "\0\u0ff7\0\u1034\0\u1071\0\u10ae\0\u10eb\0\u1128\0\u1165\0\u11a2"+
    "\0\u11df\0\u121c\0\u1259\0\u1296\0\u12d3\0\u1310\0\u134d\0\u138a"+
    "\0\u13c7\0\u0131\0\u1404\0\u1441\0\u147e\0\u14bb\0\u14f8\0\u1535"+
    "\0\u1572\0\u15af\0\u15ec\0\u1629\0\u0131\0\u1666\0\u16a3\0\u16e0"+
    "\0\u171d\0\u175a\0\u1797\0\u17d4\0\u1811\0\u184e\0\u188b\0\u18c8"+
    "\0\u1905\0\u1942\0\u197f\0\u0131\0\u19bc\0\u0131\0\u19f9\0\u1a36"+
    "\0\u1a73\0\u1ab0\0\u1aed\0\u1b2a\0\u1b67\0\u1ba4\0\u1be1\0\u1c1e"+
    "\0\u1c5b\0\u1c98\0\u1cd5\0\u1d12\0\u1d4f\0\u1d8c\0\u0131\0\u1dc9"+
    "\0\u1e06\0\u1e43\0\u1e80\0\u0131\0\u1ebd\0\u1efa\0\u1f37\0\u1f74"+
    "\0\u0131\0\u1fb1\0\u1fee\0\u202b\0\u2068\0\u20a5\0\u20e2\0\u211f"+
    "\0\u215c\0\u2199\0\u21d6\0\u2213\0\u2250\0\u228d\0\u0131\0\u22ca"+
    "\0\u2307\0\u2344\0\75\0\75\0\75\0\75\0\75\0\75"+
    "\0\75\0\75\0\75\0\75\0\u2381\0\u23be\0\75\0\u23fb"+
    "\0\u2438\0\u2475\0\u24b2\0\u24ef\0\u252c\0\u2569\0\u0131\0\u25a6"+
    "\0\u25e3\0\u2620\0\u265d\0\u269a\0\u26d7\0\u2714\0\u2751\0\u278e"+
    "\0\u27cb\0\u2808\0\u2845\0\u2882\0\u0131\0\u0131\0\u28bf\0\u0131"+
    "\0\u28fc\0\u0131\0\u0131\0\u0131\0\u2939\0\u2976\0\u29b3\0\u29f0"+
    "\0\u2a2d\0\u2a6a\0\u2aa7\0\u2ae4\0\u2b21\0\u2b5e\0\u2b9b\0\u2bd8"+
    "\0\u2c15\0\u0131\0\u2c52\0\u2c8f\0\u2ccc\0\u2d09\0\u2d46\0\u2d83"+
    "\0\u2dc0\0\u2dfd\0\u2e3a\0\u2e77\0\u2eb4\0\u2ef1\0\u2f2e\0\u2f6b"+
    "\0\u0131\0\u2fa8\0\u2fe5\0\u3022\0\u305f\0\u309c\0\u30d9\0\u3116"+
    "\0\u3153\0\u3190\0\u31cd\0\u320a\0\u3247\0\u3284\0\u32c1\0\u32fe"+
    "\0\u333b\0\u3378\0\u33b5\0\u33f2\0\u342f\0\u346c\0\u34a9\0\u34e6"+
    "\0\u3523\0\u3560\0\u359d\0\u35da\0\u3617\0\u3654\0\u3691\0\u36ce"+
    "\0\u370b\0\u3748\0\u3785\0\u37c2\0\u37ff\0\u383c\0\u3879\0\u38b6"+
    "\0\u38f3\0\u3930\0\u396d\0\u39aa\0\u39e7\0\u3a24\0\u3a61\0\u3a9e"+
    "\0\u3adb\0\u3b18\0\u3b55\0\u3b92\0\u3bcf\0\u3c0c\0\u3c49\0\u3c86"+
    "\0\u0131\0\u3cc3\0\u3d00\0\u3d3d\0\u3d7a\0\u3db7\0\u3df4\0\u3e31"+
    "\0\u3e6e\0\u3eab\0\u3ee8\0\u3f25\0\u3f62\0\u3f9f\0\u3fdc\0\u4019"+
    "\0\u4056\0\u4093\0\u40d0\0\u410d\0\u414a\0\u0131\0\u4187\0\u41c4"+
    "\0\u4201\0\u423e\0\u427b\0\u42b8\0\u42f5\0\u0131\0\u4332\0\u436f"+
    "\0\u43ac\0\u43e9\0\u4426\0\u4463\0\u44a0\0\u44dd\0\u451a\0\u4557"+
    "\0\u4594\0\u45d1\0\u460e\0\u464b\0\u4688\0\u46c5\0\u4702\0\u473f"+
    "\0\u477c\0\u47b9\0\u47f6\0\u4833\0\u4870\0\u48ad\0\u48ea\0\u4927"+
    "\0\u4927\0\u4964\0\u49a1\0\u49de\0\u4a1b\0\u4a58\0\u4a95\0\u4ad2"+
    "\0\u4b0f\0\u4b4c\0\u4b89\0\u4bc6\0\u4c03\0\u4c40\0\u4c7d\0\u0131"+
    "\0\u0131\0\u0131\0\u4cba\0\u4cf7\0\u0131\0\u4d34\0\u4d71\0\u0131"+
    "\0\u4dae\0\u4deb\0\u0131\0\u4e28\0\u4e65\0\u4ea2\0\u4edf\0\u0131"+
    "\0\u4f1c\0\u0131\0\u4f59\0\u4f96\0\u4fd3\0\u0131\0\u0131\0\u5010"+
    "\0\u0131\0\u504d\0\u508a\0\u50c7\0\u0131\0\u5104\0\u5141\0\u517e"+
    "\0\u51bb\0\u51f8\0\u5235\0\u5272\0\u52af\0\u52ec\0\u5329\0\u5366"+
    "\0\u0131\0\u53a3\0\u0131\0\u0131\0\u53e0\0\u0131\0\u541d\0\u545a"+
    "\0\u5497\0\u54d4\0\u5511\0\u554e\0\u558b\0\u55c8\0\u5605\0\u5642"+
    "\0\u567f\0\u56bc\0\u56f9\0\u0131\0\u5736\0\u5773\0\u57b0\0\u57ed"+
    "\0\u582a\0\u5867\0\u58a4\0\u58e1\0\u591e\0\u595b\0\u5998\0\u59d5"+
    "\0\u5a12\0\u0131\0\u5a4f\0\u5a8c\0\u5ac9\0\u5b06\0\u5b43\0\u0131"+
    "\0\u5b80\0\u5bbd\0\u5bfa\0\u5c37\0\u5c74\0\u5cb1\0\u5cee\0\u5d2b"+
    "\0\u5d68\0\u5da5\0\u5de2\0\u5e1f\0\u0131\0\u5e5c\0\u5e99\0\u5ed6"+
    "\0\u5f13\0\u5f50\0\u0131\0\u5f8d\0\u5fca\0\u6007\0\u6044\0\u6081"+
    "\0\u60be\0\u0131\0\u60fb\0\u0131\0\u6138\0\u6175\0\u61b2\0\u61ef"+
    "\0\u622c\0\u0131\0\u6269\0\u62a6\0\u62e3\0\u0131\0\u6320\0\u635d"+
    "\0\u639a\0\u63d7\0\u6414\0\u0131\0\u6451\0\u648e\0\u0131\0\u64cb"+
    "\0\u6508\0\u6545\0\u6582\0\u65bf\0\u65fc\0\u6639\0\u6676\0\u66b3"+
    "\0\u66f0\0\u0131\0\u672d\0\u0131\0\u676a\0\u67a7\0\u67e4\0\u6821"+
    "\0\u0131\0\u685e\0\u689b\0\u68d8\0\u6915\0\u6952\0\u698f\0\u69cc"+
    "\0\u0131\0\u6a09\0\u6a46\0\u6a83\0\u0131\0\u6ac0\0\u6afd\0\u6b3a"+
    "\0\u6b77\0\u0131\0\u0131\0\u6bb4\0\u6bf1\0\u6c2e\0\u0131\0\u0131"+
    "\0\u6c6b\0\u6ca8\0\u0131\0\u6ce5\0\u6d22\0\u6d5f\0\u0131\0\u6d9c"+
    "\0\u6dd9\0\u0131\0\u6e16\0\u6e53\0\u0131\0\u6e90\0\u6ecd\0\u6f0a"+
    "\0\u6f47\0\u6f84\0\u6fc1\0\u6ffe\0\u703b\0\u7078\0\u70b5\0\u70f2"+
    "\0\u712f\0\u716c\0\u71a9\0\u71e6\0\u7223\0\u7260\0\u729d\0\u72da"+
    "\0\u7317\0\u7354\0\u7391\0\u73ce\0\u740b\0\u7448\0\u7485\0\u74c2"+
    "\0\u74ff\0\u753c\0\u7579\0\u75b6\0\u75f3\0\u7630\0\u766d\0\u76aa"+
    "\0\u76e7\0\u7724\0\u7761\0\u779e\0\u77db\0\u7818\0\u7855\0\u7892"+
    "\0\u0131\0\u78cf\0\u790c\0\u7949\0\u7986\0\u0131\0\u79c3\0\u0131"+
    "\0\u0131\0\u7a00\0\u0131\0\u7a3d\0\u7a7a\0\u7ab7\0\u7af4\0\u7b31"+
    "\0\u7b6e\0\u7bab\0\u0131\0\u7be8\0\u7c25\0\u7c62\0\u0131\0\u7c9f"+
    "\0\u7cdc\0\u7d19\0\u0131\0\u7d56\0\u7d93\0\u7dd0\0\u7e0d\0\u0131"+
    "\0\u7e4a\0\u7e87\0\u7ec4\0\u7f01\0\u7f3e\0\u7f7b\0\u0131\0\u7fb8"+
    "\0\u0131\0\u7ff5\0\u0131\0\u8032\0\u806f\0\u80ac\0\u0131\0\u80e9"+
    "\0\u8126\0\u8163\0\u81a0\0\u81dd\0\u821a\0\u8257\0\u8294\0\u82d1"+
    "\0\u830e\0\u834b\0\u8388\0\u83c5\0\u8402\0\u843f\0\u0131\0\u0131"+
    "\0\u847c\0\u84b9\0\u0131\0\u0131\0\u84f6\0\u8533\0\u8570\0\u85ad"+
    "\0\u0131\0\u0131\0\u85ea\0\u0131\0\u8627\0\u0131\0\u8664\0\u86a1"+
    "\0\u86de\0\u871b\0\u8758\0\u8795\0\u87d2\0\u880f\0\u884c\0\u0131"+
    "\0\u0131\0\u8889\0\u88c6\0\u8903\0\u8940\0\u897d\0\u0131\0\u89ba"+
    "\0\u89f7\0\u8a34\0\u8a71\0\u8aae\0\u8aeb\0\u8b28\0\u0131\0\u8b65"+
    "\0\u0131\0\u8ba2\0\u8bdf\0\u8c1c\0\u0131\0\u8c59\0\u8c96\0\u8cd3"+
    "\0\u8d10\0\u0131\0\u8d4d\0\u8d8a\0\u8dc7\0\u8e04\0\u8e41\0\u8e7e"+
    "\0\u0131\0\u0131\0\u0131\0\u0131\0\u8ebb\0\u8ef8\0\u8f35\0\u8f72"+
    "\0\u8faf\0\u8fec\0\u9029\0\u9066\0\u90a3\0\u90e0\0\u911d\0\u915a"+
    "\0\u9197\0\u91d4\0\u9211\0\u924e\0\u928b\0\u92c8\0\u9305\0\u0131"+
    "\0\u0131\0\u9342\0\u937f\0\u93bc\0\u0131\0\u93f9\0\u9436\0\u9473"+
    "\0\u94b0\0\u0131\0\u94ed\0\u952a\0\u9567\0\u95a4\0\u0131\0\u95e1"+
    "\0\u961e\0\u965b\0\u0131\0\u9698\0\u0131\0\u0131\0\u96d5\0\u0131"+
    "\0\u9712\0\u974f\0\u978c\0\u97c9\0\u0131\0\u9806\0\u9843\0\u9880"+
    "\0\u0131\0\u98bd\0\u0131\0\u98fa\0\u9937\0\u0131\0\u9974\0\u99b1"+
    "\0\u0131\0\u99ee\0\u9a2b\0\u9a68\0\u9aa5\0\u0131\0\u9ae2\0\u9b1f"+
    "\0\u9b5c\0\u9b99\0\u9bd6\0\u9c13\0\u9c50\0\u9c8d\0\u0131\0\u9cca"+
    "\0\u9d07\0\u0131\0\u9d44\0\u0131\0\u0131\0\u0131\0\u0131\0\u9d81"+
    "\0\u9dbe\0\u9dfb\0\u9e38\0\u9e75\0\u9eb2\0\u9eef\0\u9f2c\0\u9f69"+
    "\0\u9fa6\0\u9fe3\0\u0131\0\u0131\0\ua020\0\ua05d\0\ua09a\0\u0131"+
    "\0\ua0d7\0\ua114\0\u0131\0\ua151\0\ua18e\0\u0131\0\ua1cb\0\ua208"+
    "\0\ua245\0\ua282\0\ua2bf\0\u0131\0\u0131\0\u0131\0\u0131\0\ua2fc"+
    "\0\ua339\0\ua376\0\u0131\0\ua3b3\0\ua3f0\0\ua42d\0\ua46a\0\ua4a7"+
    "\0\ua4e4\0\u0131\0\ua521\0\u0131\0\u0131\0\ua55e\0\ua59b\0\ua5d8"+
    "\0\u0131\0\ua615\0\ua652\0\ua68f\0\ua6cc\0\u0131\0\ua709\0\ua746"+
    "\0\ua783\0\ua7c0\0\u0131\0\ua7fd\0\ua83a\0\u0131\0\ua877\0\u0131"+
    "\0\ua8b4\0\ua8f1\0\ua92e\0\u0131\0\ua96b\0\ua9a8\0\u0131\0\ua9e5"+
    "\0\uaa22\0\uaa5f\0\u0131\0\u0131\0\uaa9c\0\u0131\0\uaad9\0\uab16"+
    "\0\u0131\0\uab53\0\uab90\0\u0131\0\uabcd\0\uac0a\0\uac47\0\uac84"+
    "\0\uacc1\0\uacfe\0\uad3b\0\uad78\0\uadb5\0\uadf2\0\uae2f\0\uae6c"+
    "\0\u0131\0\u0131\0\uaea9\0\uaee6\0\uaf23\0\u0131\0\uaf60\0\uaf9d"+
    "\0\uafda\0\ub017\0\u0131\0\ub054\0\ub091\0\u0131\0\u0131\0\ub0ce"+
    "\0\u0131\0\ub10b\0\u0131\0\ub148\0\ub185\0\ub1c2\0\u0131\0\ub1ff"+
    "\0\ub23c\0\ub279\0\u0131\0\ub2b6\0\u0131\0\ub2f3\0\u0131\0\u0131"+
    "\0\ub330\0\ub36d\0\ub3aa\0\ub3e7\0\u0131\0\u0131\0\ub424\0\ub461"+
    "\0\ub49e\0\u0131\0\ub4db\0\u0131\0\u0131\0\ub518\0\ub555\0\ub592"+
    "\0\ub5cf\0\ub60c\0\ub649\0\ub686\0\ub6c3\0\ub700\0\ub73d\0\u0131"+
    "\0\ub77a\0\u0131\0\ub7b7\0\ub7f4\0\ub831\0\ub86e\0\ub8ab\0\ub8e8"+
    "\0\ub925\0\ub962\0\ub99f\0\ub9dc\0\uba19\0\u0131\0\uba56\0\u0131"+
    "\0\uba93\0\u0131\0\u0131\0\ubad0\0\ubb0d\0\ubb4a\0\ubb87\0\u0131"+
    "\0\ubbc4\0\ubc01\0\ubc3e\0\ubc7b\0\ubcb8\0\u0131\0\ubcf5\0\ubd32"+
    "\0\ubd6f\0\u0131\0\ubdac\0\ubde9\0\ube26\0\ube63\0\ubea0\0\ubedd"+
    "\0\ubf1a\0\u0131\0\ubf57\0\ubf94\0\u0131\0\ubfd1\0\uc00e\0\u0131"+
    "\0\u0131\0\uc04b\0\uc088\0\u0131\0\uc0c5\0\uc102\0\uc13f\0\uc17c"+
    "\0\u0131\0\uc1b9\0\uc1f6\0\uc233\0\u0131\0\uc270\0\uc2ad\0\u0131"+
    "\0\uc2ea\0\uc327\0\uc364\0\uc3a1\0\uc3de\0\uc41b\0\uc458\0\uc495"+
    "\0\uc4d2\0\uc50f\0\uc54c\0\uc589\0\uc5c6\0\uc603\0\uc640\0\u0131"+
    "\0\uc67d\0\u0131\0\uc6ba\0\u0131\0\uc6f7\0\uc734\0\u0131\0\uc771"+
    "\0\u0131\0\uc7ae\0\uc7eb\0\uc828\0\uc865\0\uc8a2\0\uc8df\0\u0131"+
    "\0\u0131\0\uc91c\0\u0131\0\u0131\0\uc959\0\uc996\0\uc9d3\0\uca10"+
    "\0\u0131\0\u0131\0\uca4d\0\uca8a\0\ucac7\0\ucb04\0\ucb41\0\ucb7e"+
    "\0\u0131\0\ucbbb\0\ucbf8\0\ucc35\0\ucc72\0\u0131\0\uccaf\0\uccec"+
    "\0\ucd29\0\u0131\0\u0131\0\ucd66\0\ucda3\0\ucde0\0\uce1d\0\u0131"+
    "\0\u0131\0\u0131\0\u0131\0\uce5a\0\u0131\0\u0131\0\uce97\0\uced4"+
    "\0\ucf11\0\ucf4e\0\ucf8b\0\ucfc8\0\u0131\0\ud005\0\ud042\0\ud07f"+
    "\0\ud0bc\0\ud0f9\0\ud136\0\u0131\0\ud173\0\ud1b0\0\ud1ed\0\ud22a"+
    "\0\ud267\0\u0131\0\ud2a4\0\ud2e1\0\u0131\0\ud31e\0\u0131\0\u0131"+
    "\0\ud35b\0\ud398\0\ud3d5\0\ud412\0\u0131\0\ud44f\0\ud48c\0\u0131"+
    "\0\ud4c9\0\ud506\0\u0131\0\ud543\0\u0131\0\75\0\u0131\0\ud580"+
    "\0\ud5bd\0\ud5fa\0\u0131\0\ud637\0\u0131\0\ud674\0\ud6b1\0\u0131"+
    "\0\u0131\0\u0131\0\u0131\0\u0131\0\ud6ee\0\ud72b\0\ud768\0\ud7a5"+
    "\0\ud7e2\0\u0131\0\ud81f\0\ud85c\0\ud899\0\ud8d6\0\ud913\0\u0131"+
    "\0\ud950\0\ud98d\0\ud9ca\0\uda07\0\uda44\0\uda81\0\udabe\0\udafb"+
    "\0\udb38\0\udb75\0\udbb2\0\udbef\0\udc2c\0\udc69\0\udca6\0\u0131"+
    "\0\udce3\0\u0131\0\udd20\0\udd5d\0\udd9a\0\uddd7\0\ude14\0\ude51"+
    "\0\u0131";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1177];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\3\3\1\4\1\5\1\6\1\7\1\10\1\7"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\7\1\17"+
    "\1\20\1\21\1\22\1\23\1\7\1\24\1\25\1\26"+
    "\1\27\1\30\1\7\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\37\1\40\1\41\1\7\1\42\1\43\1\7"+
    "\1\3\1\15\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61"+
    "\1\62\1\63\1\64\76\0\3\3\46\0\1\3\27\0"+
    "\1\65\75\0\1\66\75\0\10\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\10\1\0\1\10\2\0"+
    "\27\10\1\0\1\10\30\0\3\10\1\15\3\10\1\15"+
    "\1\67\1\10\2\0\27\10\1\0\1\15\30\0\5\7"+
    "\1\70\2\7\1\0\1\7\2\0\1\71\3\7\1\72"+
    "\2\7\1\73\1\74\13\7\1\75\2\7\1\0\1\7"+
    "\30\0\4\7\1\76\3\7\1\0\1\7\2\0\6\7"+
    "\1\77\4\7\1\100\13\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\101\4\7\1\102\2\7"+
    "\1\103\14\7\1\0\1\7\21\0\1\20\1\104\1\105"+
    "\17\20\1\106\52\20\7\0\4\7\1\107\1\110\1\111"+
    "\1\7\1\0\1\7\2\0\1\7\1\112\11\7\1\113"+
    "\10\7\1\114\2\7\1\0\1\7\30\0\5\7\1\115"+
    "\2\7\1\0\1\7\2\0\1\116\1\7\1\117\2\7"+
    "\1\120\1\7\1\121\1\7\1\122\1\123\3\7\1\124"+
    "\10\7\1\0\1\7\30\0\4\7\1\125\1\7\1\126"+
    "\1\7\1\0\1\7\2\0\3\7\1\127\1\7\1\130"+
    "\5\7\1\131\13\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\132\1\7\1\133\2\7\1\134\1\7"+
    "\1\135\1\7\1\136\1\137\1\140\1\141\1\7\1\142"+
    "\10\7\1\0\1\7\30\0\5\7\1\143\2\7\1\0"+
    "\1\7\2\0\1\144\1\7\1\145\4\7\1\146\2\7"+
    "\1\147\14\7\1\0\1\7\30\0\5\7\1\150\1\151"+
    "\1\7\1\0\1\7\2\0\2\7\1\152\2\7\1\153"+
    "\4\7\1\154\14\7\1\0\1\7\30\0\4\7\1\155"+
    "\1\156\2\7\1\0\1\7\2\0\5\7\1\157\1\160"+
    "\11\7\1\161\1\162\2\7\1\163\2\7\1\0\1\7"+
    "\30\0\5\7\1\164\1\165\1\7\1\0\1\7\2\0"+
    "\1\166\4\7\1\167\1\7\1\170\4\7\1\171\12\7"+
    "\1\0\1\7\30\0\4\7\1\172\3\7\1\0\1\7"+
    "\2\0\1\7\1\173\11\7\1\174\1\7\1\175\2\7"+
    "\1\176\6\7\1\0\1\7\30\0\5\7\1\177\2\7"+
    "\1\0\1\7\2\0\1\200\1\7\1\201\1\7\1\202"+
    "\2\7\1\203\1\204\1\205\1\206\1\7\1\207\1\210"+
    "\11\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\1\211\6\7\1\212\17\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\213\1\7\1\214\4\7\1\215"+
    "\2\7\1\216\3\7\1\217\10\7\1\0\1\7\30\0"+
    "\5\7\1\220\2\7\1\0\1\7\2\0\1\221\1\7"+
    "\1\222\2\7\1\223\3\7\1\224\1\225\14\7\1\0"+
    "\1\7\30\0\6\7\1\226\1\7\1\0\1\7\2\0"+
    "\5\7\1\227\1\7\1\230\6\7\1\231\10\7\1\0"+
    "\1\7\30\0\5\7\1\232\1\233\1\7\1\0\1\7"+
    "\2\0\1\234\1\7\1\235\2\7\1\236\1\7\1\237"+
    "\2\7\1\240\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\241\4\7\1\242\4\7\1\243\1\7"+
    "\1\244\12\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\245\7\7\1\246\3\7\1\247\10\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\250"+
    "\11\7\1\251\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\7\7\1\252\17\7\1\0\1\7\101\0"+
    "\1\253\76\0\1\254\76\0\1\255\76\0\1\256\76\0"+
    "\1\257\74\0\1\260\74\0\1\261\74\0\1\262\77\0"+
    "\1\263\75\0\1\264\5\65\1\265\67\65\1\66\1\266"+
    "\1\267\72\66\12\0\1\67\3\0\1\67\1\0\1\270"+
    "\4\0\1\270\25\0\1\67\30\0\6\7\1\271\1\7"+
    "\1\0\1\7\2\0\15\7\1\272\11\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\273\10\7"+
    "\1\274\11\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\275\24\7\1\0\1\7\30\0\4\7"+
    "\1\276\3\7\1\0\1\7\2\0\4\7\1\277\3\7"+
    "\1\300\16\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\14\7\1\301\12\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\302\26\7\1\0\1\7\30\0"+
    "\6\7\1\303\1\7\1\0\1\7\2\0\6\7\1\304"+
    "\3\7\1\305\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\306\25\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\307\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\20\7\1\310"+
    "\6\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\1\311\7\7\1\312\16\7\1\0\1\7\30\0\4\7"+
    "\1\313\3\7\1\0\1\7\2\0\22\7\1\314\4\7"+
    "\1\0\1\7\23\0\1\105\101\0\10\7\1\0\1\7"+
    "\2\0\1\7\1\315\7\7\1\316\15\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\317\22\7"+
    "\1\0\1\7\30\0\6\7\1\320\1\7\1\0\1\7"+
    "\2\0\4\7\1\321\22\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\7\1\322\25\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\10\7\1\323\16\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\17\7"+
    "\1\324\7\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\15\7\1\325\11\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\326\22\7\1\0\1\7"+
    "\30\0\4\7\1\327\1\7\1\330\1\7\1\0\1\7"+
    "\2\0\1\331\7\7\1\332\2\7\1\333\4\7\1\334"+
    "\6\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\7\7\1\335\17\7\1\0\1\7\30\0\5\7\1\336"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\4\7\1\337\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\340"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\341\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\342\6\7\1\343\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\344"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\345\1\7\1\346\3\7\1\347\1\7\1\350"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\351\21\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\10\7\1\352\16\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\16\7\1\353\10\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\3\7\1\354"+
    "\23\7\1\0\1\7\30\0\5\7\1\355\2\7\1\0"+
    "\1\7\2\0\1\356\10\7\1\357\1\360\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\6\7\1\361"+
    "\20\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\6\7\1\362\20\7\1\0\1\7\30\0\4\7\1\363"+
    "\3\7\1\0\1\7\2\0\15\7\1\364\11\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\365"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\366\24\7\1\0\1\7\30\0\6\7\1\367"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\370\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\371\3\7"+
    "\1\372\1\7\1\373\1\7\1\374\2\7\1\375\4\7"+
    "\1\376\3\7\1\377\2\7\1\0\1\7\30\0\6\7"+
    "\1\u0100\1\7\1\0\1\7\2\0\21\7\1\u0101\5\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\17\7"+
    "\1\u0102\7\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\16\7\1\u0103\10\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u0104\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u0105\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0106"+
    "\4\7\1\u0107\2\7\1\u0108\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\24\7\1\u0109\2\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u010a"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\1\7\1\u010b\25\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u010c\1\7\1\u010d\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\20\7\1\u010e"+
    "\6\7\1\0\1\7\30\0\4\7\1\u010f\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0110\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u0111\21\7\1\0"+
    "\1\7\30\0\5\7\1\u0112\2\7\1\0\1\7\2\0"+
    "\7\7\1\u0113\17\7\1\0\1\7\30\0\6\7\1\u0114"+
    "\1\7\1\0\1\7\2\0\13\7\1\u0115\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0116"+
    "\4\7\1\u0117\17\7\1\0\1\7\30\0\4\7\1\u0118"+
    "\1\u0119\1\u011a\1\7\1\0\1\7\2\0\1\u011b\14\7"+
    "\1\u011c\11\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u011d\1\7\1\u011e\24\7\1\0\1\7\30\0"+
    "\4\7\1\u011f\1\7\1\u0120\1\7\1\0\1\7\2\0"+
    "\1\7\1\u0121\2\7\1\u0122\1\7\1\u0123\1\7\1\u0124"+
    "\2\7\1\u0125\13\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0126\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0127\14\7\1\u0128\11\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\15\7"+
    "\1\u0129\11\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\24\7\1\u012a\2\7\1\0\1\7\30\0\6\7"+
    "\1\u012b\1\7\1\0\1\7\2\0\4\7\1\u012c\3\7"+
    "\1\u012d\2\7\1\u012e\1\7\1\u012f\11\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\u0130\26\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\15\7\1\u0131"+
    "\11\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u0132\6\7\1\u0133\12\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u0134\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\23\7\1\u0135"+
    "\3\7\1\0\1\7\30\0\5\7\1\u0136\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0137\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\24\7\1\u0138\2\7\1\0\1\7"+
    "\30\0\6\7\1\u0139\1\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\3\7"+
    "\1\u013a\1\7\1\u013b\21\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u013c\21\7\1\0\1\7"+
    "\30\0\4\7\1\u013d\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\4\7\1\u013e\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\6\7\1\u013f\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\10\7\1\u0140\16\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u0141\12\7"+
    "\1\u0142\7\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u0143\4\7\1\u0144\17\7\1\0\1\7"+
    "\30\0\4\7\1\u0145\3\7\1\0\1\7\2\0\4\7"+
    "\1\u0146\12\7\1\u0147\7\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\7\7\1\u0148\17\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\u0149\6\7\1\u014a"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u014b\22\7\1\0\1\7\30\0\4\7\1\u014c"+
    "\1\7\1\u014d\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\7\7\1\u014e"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u014f\13\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0150\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0151\4\7\1\u0152"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u0153\21\7\1\0\1\7\30\0\6\7\1\u0154"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u0155\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u0156"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0157\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0158\7\7\1\u0159\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\11\7\1\u015a"+
    "\15\7\1\0\1\7\30\0\6\7\1\u015b\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\6\7\1\u015c"+
    "\1\7\1\0\1\7\2\0\5\7\1\u015d\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u015e"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u015f\14\7\1\0\1\7\21\0\4\65\1\267"+
    "\1\265\67\65\2\0\1\267\100\0\1\u0160\3\0\1\u0161"+
    "\3\0\1\u0161\2\0\1\u0160\31\0\1\u0161\30\0\6\7"+
    "\1\u0162\1\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u0163\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u0164\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u0165\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\3\7\1\u0166\23\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\10\7\1\u0167\16\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\14\7"+
    "\1\u0168\12\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u0169\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u016a\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u016b\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u016c"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\7\7\1\u016d\16\7\1\u016e\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u016f\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u0170\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0171"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\1\7\1\u0172\25\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0173\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u0174\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u0175\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\14\7"+
    "\1\u0176\12\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u0177\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\6\7\1\u0178\20\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\u0179\1\7\1\u017a"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\11\7\1\u017b\15\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u017c\24\7\1\0\1\7\30\0"+
    "\6\7\1\u017d\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\6\7\1\u017e\1\7\1\0\1\7\2\0"+
    "\12\7\1\u017f\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\10\7\1\u0180\16\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0181\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\6\7\1\u0182\20\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\16\7"+
    "\1\u0183\10\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u0184\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0185\15\7\1\u0186\4\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u0187"+
    "\16\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u0188\21\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0189\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u018a\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u018b"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u018c\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u018d\6\7\1\u018e\13\7\1\0"+
    "\1\7\30\0\6\7\1\u018f\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\1\u0190\26\7\1\0\1\7\30\0\6\7\1\u0191\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u0192\22\7\1\0\1\7"+
    "\30\0\4\7\1\u0193\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\4\7\1\u0194\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\2\7\1\u0195\5\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\17\7\1\u0196\7\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u0197\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\11\7"+
    "\1\u0198\15\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u0199\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\26\7\1\u019a\1\0\1\7\30\0"+
    "\4\7\1\u019b\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u019c"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u019d\13\7\1\0\1\7\30\0\6\7\1\u019e"+
    "\1\7\1\0\1\7\2\0\1\7\1\u019f\25\7\1\0"+
    "\1\7\30\0\5\7\1\u01a0\2\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\6\7\1\u01a1\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\7\7\1\u01a2\17\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u01a3\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u01a4"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u01a5\4\7\1\u01a6\17\7\1\0\1\7\30\0"+
    "\6\7\1\u01a7\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u01a8"+
    "\6\7\1\u01a9\7\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\14\7\1\u01aa\12\7\1\0\1\7\30\0"+
    "\6\7\1\u01ab\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\4\7\1\u01ac\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u01ad\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\10\7\1\u01ae\16\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u01af\16\7\1\0"+
    "\1\7\30\0\4\7\1\u01b0\3\7\1\0\1\7\2\0"+
    "\15\7\1\u01b1\11\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\7\7\1\u01b2\17\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u01b3\3\7\1\u01b4"+
    "\20\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u01b5\24\7\1\0\1\7\30\0\4\7\1\u01b6"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u01b7\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\u01b8"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u01b9\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u01ba\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u01bb\5\7\1\u01bc"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u01bd\13\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u01be\13\7\1\0\1\7\30\0"+
    "\6\7\1\u01bf\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u01c0"+
    "\5\7\1\u01c1\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u01c2\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\13\7\1\u01c3\13\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u01c4\6\7"+
    "\1\u01c5\10\7\1\u01c6\2\7\1\0\1\7\30\0\4\7"+
    "\1\u01c7\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\5\7\1\u01c8\1\u01c9\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\6\7\1\u01ca\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\6\7\1\u01cb\6\7\1\u01cc\11\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u01cd"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u01ce\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u01cf\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u01d0\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u01d1"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u01d2\4\7\1\u01d3\17\7\1\0\1\7\30\0"+
    "\5\7\1\u01d4\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\6\7\1\u01d5\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u01d6\24\7\1\0\1\7\30\0\4\7\1\u01d7"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\17\7\1\u01d8\7\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u01d9"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u01da\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u01db\15\7\1\u01dc\6\7\1\0"+
    "\1\7\30\0\5\7\1\u01dd\2\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\5\7\1\u01de\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u01df\13\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u01e0\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u01e1\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u01e2\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\7\7\1\u01e3\17\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u01e4\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u01e5\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u01e6\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u01e7\22\7\1\0\1\7\30\0\6\7"+
    "\1\u01e8\1\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\12\7\1\u01e9\14\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\7"+
    "\1\u01ea\25\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\13\7\1\u01eb\13\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\22\7\1\u01ec\4\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\17\7\1\u01ed\7\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u01ee\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\22\7\1\u01ef\4\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\22\7\1\u01f0\4\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\21\7\1\u01f1\5\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u01f2\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u01f3\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\21\7\1\u01f4\5\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u01f5\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\12\7\1\u01f6\14\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\16\7"+
    "\1\u01f7\10\7\1\0\1\7\30\0\4\7\1\u01f8\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\5\7"+
    "\1\u01f9\2\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\7\7\1\u01fa\17\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\10\7"+
    "\1\u01fb\16\7\1\0\1\7\30\0\6\7\1\u01fc\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u01fd\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u01fe\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u01ff"+
    "\16\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0200\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\15\7\1\u0201\11\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0202\16\7\1\u0203"+
    "\5\7\1\0\1\7\30\0\6\7\1\u0204\1\7\1\0"+
    "\1\7\2\0\2\7\1\u0205\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0206\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0207"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\14\7\1\u0208\12\7\1\0\1\7\30\0\4\7\1\u0209"+
    "\3\7\1\0\1\7\2\0\5\7\1\u020a\21\7\1\0"+
    "\1\7\30\0\6\7\1\u020b\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u020c\13\7\1\0\1\7\30\0\6\7\1\u020d"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\5\7\1\u020e\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u020f"+
    "\1\u0210\4\7\1\u0211\10\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\21\7\1\u0212\5\7\1\0\1\7"+
    "\30\0\4\7\1\u0213\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\33\0\1\u0161\3\0\1\u0161\34\0\1\u0161"+
    "\30\0\10\7\1\0\1\7\2\0\12\7\1\u0214\14\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\5\7"+
    "\1\u0215\21\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\7\7\1\u0216\17\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\13\7\1\u0217\13\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u0218\22\7"+
    "\1\0\1\7\30\0\6\7\1\u0219\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u021a\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u021b\21\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\10\7\1\u021c\16\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\15\7"+
    "\1\u021d\11\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\24\7\1\u021e\2\7\1\0\1\7\30\0\4\7"+
    "\1\u021f\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\5\7\1\u0220\2\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\4\7"+
    "\1\u0221\22\7\1\0\1\7\30\0\6\7\1\u0222\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\4\7"+
    "\1\u0223\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\7\7\1\u0224\17\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\5\7"+
    "\1\u0225\21\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\16\7\1\u0226\10\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u0227\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u0228\22\7"+
    "\1\0\1\7\30\0\6\7\1\u0229\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u022a\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\15\7\1\u022b\11\7\1\0\1\7\30\0"+
    "\5\7\1\u022c\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\6\7\1\u022d\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\15\7\1\u022e\11\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u022f\4\7\1\u0230\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\11\7\1\u0231"+
    "\15\7\1\0\1\7\30\0\5\7\1\u0232\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u0233\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\6\7\1\u0234\20\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0235"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\24\7\1\u0236\2\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\6\7\1\u0237\20\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0238\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\u0239"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u023a\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u023b\13\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u023c\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\17\7\1\u023d"+
    "\7\7\1\0\1\7\30\0\2\7\1\u023e\5\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u023f\14\7\1\0\1\7\30\0"+
    "\5\7\1\u0240\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0241"+
    "\24\7\1\0\1\7\30\0\2\7\1\u0242\5\7\1\0"+
    "\1\7\2\0\4\7\1\u0243\2\7\1\u0244\17\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u0245"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u0246\14\7\1\0\1\7\30\0\4\7\1\u0247"+
    "\3\7\1\0\1\7\2\0\15\7\1\u0248\11\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u0249"+
    "\1\7\1\u024a\17\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u024b\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u024c\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\22\7\1\u024d"+
    "\4\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\16\7\1\u024e\10\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\7\7\1\u024f\17\7\1\0\1\7\30\0"+
    "\5\7\1\u0250\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0251"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u0252\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0253\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u0254\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0255"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0256\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0257\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u0258\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\5\7\1\u0259\21\7"+
    "\1\0\1\7\30\0\5\7\1\u025a\2\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\5\7\1\u025b\21\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\7\1\u025c\1\7\1\u025d\1\7"+
    "\1\u025e\20\7\1\u025f\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\7\7\1\u0260\5\7\1\u0261\11\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0262"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u0263\21\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0264\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\7\7\1\u0265\17\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0266"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0267\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0268\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0269\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u026a\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\13\7"+
    "\1\u026b\13\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u026c\11\7\1\u026d\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u026e\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u026f"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0270\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\15\7\1\u0271\11\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0272\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u0273\24\7"+
    "\1\0\1\7\30\0\5\7\1\u0274\2\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\12\7\1\u0275\14\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\22\7\1\u0276\4\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\5\7\1\u0277\21\7"+
    "\1\0\1\7\30\0\4\7\1\u0278\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\3\7\1\u0279\23\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u027a\21\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u027b\22\7"+
    "\1\0\1\7\30\0\5\7\1\u027c\2\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\5\7\1\u027d\21\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u027e\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u027f\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\7"+
    "\1\u0280\25\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\10\7\1\u0281\16\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\13\7\1\u0282\13\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\5\7\1\u0283\21\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u0284\14\7\1\0\1\7\30\0\4\7\1\u0285\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\12\7\1\u0286\14\7\1\0\1\7"+
    "\30\0\6\7\1\u0287\1\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\15\7"+
    "\1\u0288\11\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u0289\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\7\1\u028a\25\7\1\0\1\7"+
    "\30\0\6\7\1\u028b\1\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\4\7\1\u028c\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\6\7\1\u028d\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\12\7\1\u028e\14\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u028f\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\11\7"+
    "\1\u0290\15\7\1\0\1\7\30\0\5\7\1\u0291\2\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u0292\24\7\1\0\1\7"+
    "\30\0\4\7\1\u0293\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\22\7"+
    "\1\u0294\4\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\13\7\1\u0295\13\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u0296\21\7\1\0\1\7"+
    "\30\0\4\7\1\u0297\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\u0298"+
    "\26\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0299\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\6\7\1\u029a\20\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u029b\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u029c"+
    "\22\7\1\0\1\7\30\0\2\7\1\u029d\5\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\14\7\1\u029e\12\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u029f\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u02a0"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\1\u02a1\26\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\20\7\1\u02a2\6\7\1\0\1\7\30\0\4\7"+
    "\1\u02a3\3\7\1\0\1\7\2\0\17\7\1\u02a4\7\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\20\7"+
    "\1\u02a5\6\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u02a6\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\12\7\1\u02a7\14\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u02a8\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u02a9\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u02aa\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u02ab\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\14\7\1\u02ac\12\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u02ad\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\12\7\1\u02ae\14\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\20\7\1\u02af\6\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\12\7\1\u02b0\14\7"+
    "\1\0\1\7\30\0\4\7\1\u02b1\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\5\7\1\u02b2\2\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\10\7\1\u02b3\16\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\14\7\1\u02b4\12\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u02b5\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\7\7\1\u02b6\17\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u02b7\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u02b8\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\7\7"+
    "\1\u02b9\17\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\5\7\1\u02ba\21\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u02bb\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u02bc\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u02bd"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\7\7\1\u02be\17\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u02bf\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u02c0\26\7\1\0\1\7"+
    "\30\0\6\7\1\u02c1\1\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u02c2\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\12\7\1\u02c3\14\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\12\7\1\u02c4\14\7\1\0\1\7"+
    "\30\0\4\7\1\u02c5\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\6\7"+
    "\1\u02c6\20\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u02c7\22\7\1\0\1\7\30\0\4\7"+
    "\1\u02c8\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u02c9\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\13\7"+
    "\1\u02ca\13\7\1\0\1\7\30\0\6\7\1\u02cb\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u02cc\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\13\7\1\u02cd\13\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u02ce\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u02cf\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u02d0\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\7\7\1\u02d1\17\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u02d2\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\21\7"+
    "\1\u02d3\5\7\1\0\1\7\30\0\4\7\1\u02d4\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u02d5\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u02d6\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\7\7\1\u0244"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u02d7\24\7\1\0\1\7\30\0\4\7\1\u02d8"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\4\7\1\u02d9\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u02da"+
    "\16\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\20\7\1\u02db\6\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\6\7\1\u02dc\20\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u02dd\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u02de"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u02df\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u02e0\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u02e1\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u02e2\26\7"+
    "\1\0\1\7\30\0\5\7\1\u02e3\2\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\12\7\1\u02e4\14\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\10\7\1\u02e5\16\7\1\0\1\7"+
    "\30\0\4\7\1\u02e6\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\13\7"+
    "\1\u02e7\13\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\7\1\u02e8\25\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u02e9\21\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u02ea\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\u02eb"+
    "\26\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\15\7\1\u02ec\11\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\7\7\1\u02ed\17\7\1\0\1\7\30\0"+
    "\5\7\1\u02ee\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\4\7\1\u02ef\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u02f0\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u02f1\22\7\1\0\1\7\30\0"+
    "\4\7\1\u02f2\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u02f3"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u02f4\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\u02f5\3\7\1\u02f6\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\7\1\u02f7"+
    "\25\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u02f8\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u02f9\14\7\1\0\1\7\30\0"+
    "\4\7\1\u02fa\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u02fb"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u02fc\21\7\1\0\1\7\30\0\4\7\1\u02fd"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u02fe\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\u02ff"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0300\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0301\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\6\7\1\u0302\20\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0303"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u0304\13\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\u0305\25\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0306\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u0307"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u0308\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0309\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u030a\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u030b"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\7\7\1\u030c\17\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u030d\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u030e\2\7\1\u030f"+
    "\13\7\1\0\1\7\30\0\6\7\1\u0310\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0311\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\15\7\1\u0312\11\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\7\7\1\u0313\17\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\7"+
    "\1\u0314\10\7\1\u0315\2\7\1\u0316\11\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\17\7\1\u0317\7\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\7\7"+
    "\1\u0318\17\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\23\7\1\u0319\3\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\6\7\1\u031a\20\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u031b\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u031c\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\11\7\1\u031d\15\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u031e\22\7\1\0\1\7"+
    "\30\0\6\7\1\u031f\1\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u0320\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\20\7\1\u0321\6\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u0322\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\17\7\1\u0323\7\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\5\7"+
    "\1\u0324\21\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u0325\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0326\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u0327\21\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\7\7\1\u0328\17\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\4\7"+
    "\1\u0329\22\7\1\0\1\7\30\0\4\7\1\u032a\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u032b\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\13\7\1\u032c\13\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\u032d"+
    "\26\7\1\0\1\7\30\0\4\7\1\u032e\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\4\7\1\u032f"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u0330\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u0331\26\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\13\7"+
    "\1\u0332\13\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\22\7\1\u0333\4\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u0334\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0335\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0336"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0337\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u0338\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u0339\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\15\7\1\u033a"+
    "\11\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u033b\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u033c\24\7\1\0\1\7\30\0"+
    "\6\7\1\u033d\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u033e"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u033f\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\16\7\1\u0340\10\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u0341\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0342"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0343\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0344\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u0345\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\23\7\1\u0346\3\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0347"+
    "\22\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u0348\16\7\1\0\1\7\30\0\4\7\1\u0349"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u034a\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u034b\26\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\4\7"+
    "\1\u034c\22\7\1\0\1\7\30\0\6\7\1\u034d\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\5\7\1\u034e\21\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\3\7\1\u034f\23\7"+
    "\1\0\1\7\30\0\6\7\1\u0350\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\13\7\1\u0351\13\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u0352\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u0353\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u0354"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u0355\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0356\24\7\1\0\1\7\30\0"+
    "\4\7\1\u0357\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u0358"+
    "\16\7\1\0\1\7\30\0\4\7\1\u0359\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\u035a\25\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u035b\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u035c"+
    "\14\7\1\0\1\7\30\0\5\7\1\u035d\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\11\7\1\u035e\15\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u035f\22\7\1\0"+
    "\1\7\30\0\6\7\1\u0360\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\21\7\1\u0361\5\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0362\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u0363\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\u0364"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0365\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u0366\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0367\24\7\1\0"+
    "\1\7\30\0\4\7\1\u0368\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\5\7\1\u0369\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u036a\26\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u036b\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u036c\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\10\7"+
    "\1\u036d\16\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u036e\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\7\7\1\u036f\17\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u0370\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u0371\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u0372\22\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\1\u0373\26\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u0374\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u0375"+
    "\22\7\1\0\1\7\30\0\4\7\1\u0376\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u0377\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0378\22\7\1\0"+
    "\1\7\30\0\2\7\1\u0379\5\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\16\7\1\u037a\10\7\1\0\1\7\30\0\2\7\1\u037b"+
    "\5\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\21\7\1\u037c\5\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u037d\26\7"+
    "\1\0\1\7\30\0\4\7\1\u037e\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\7\7\1\u037f\17\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\10\7\1\u0380\16\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u0381\24\7"+
    "\1\0\1\7\30\0\4\7\1\u0382\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\7\7\1\u0383\17\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\7\7\1\u0384\17\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\3\7\1\u0385\23\7"+
    "\1\0\1\7\30\0\4\7\1\u0386\3\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\7\1\u0387\25\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\10\7\1\u0388\16\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\15\7\1\u0389\11\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\7\7"+
    "\1\u038a\17\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\5\7\1\u038b\21\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u038c\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\27\7\1\u038d\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\5\7\1\u038e\21\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\17\7"+
    "\1\u038f\7\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u0390\26\7\1\0\1\7\30\0\6\7\1\u0391"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0392\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u0393"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0394\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0395\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\23\7\1\u0396\3\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0397"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0398\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\u0399\26\7\1\0\1\7\30\0\5\7"+
    "\1\u039a\2\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u039b\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u039c\14\7\1\0\1\7\30\0\6\7\1\u039d\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\15\7\1\u039e\11\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u039f\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u03a0\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u03a1\22\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\24\7\1\u03a2\2\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\5\7\1\u03a3\21\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\7\7"+
    "\1\u03a4\17\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u03a5\22\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\11\7\1\u03a6\15\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u03a7\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\17\7"+
    "\1\u03a8\7\7\1\0\1\7\30\0\6\7\1\u03a9\1\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u03aa\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\10\7\1\u03ab\16\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\22\7"+
    "\1\u03ac\4\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u03ad\22\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\10\7\1\u03ae\16\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\7\7\1\u03af\17\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\5\7"+
    "\1\u03b0\21\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u03b1\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u03b2\13\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u03b3\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u03b4"+
    "\22\7\1\0\1\7\30\0\2\7\1\u03b5\5\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u03b6\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u03b7\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u03b8"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u03b9\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u03ba\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u03bb\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\10\7\1\u03bc"+
    "\16\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\11\7\1\u03bd\15\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u03be\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\11\7\1\u03bf\15\7\1\0"+
    "\1\7\30\0\2\7\1\u03c0\5\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u03c1\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u03c2\14\7\1\0\1\7\30\0"+
    "\6\7\1\u03c3\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u03c4"+
    "\14\7\1\0\1\7\30\0\5\7\1\u03c5\2\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\4\7\1\u03c6"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u03c7\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\4\7\1\u03c8"+
    "\22\7\1\0\1\7\30\0\4\7\1\u03c9\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\22\7\1\u03ca\4\7\1\0\1\7\30\0"+
    "\4\7\1\u03cb\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u03cc"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u03cd\22\7\1\0\1\7\30\0\2\7\1\u03ce"+
    "\5\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u03cf\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u03d0"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\21\7\1\u03d1\5\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\3\7\1\u03d2\23\7\1\0\1\7\63\0"+
    "\1\u03d3\41\0\10\7\1\0\1\7\2\0\5\7\1\u03d4"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u03d5\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\u03d6\25\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\3\7\1\u03d7\23\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u03d8\26\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\7\7"+
    "\1\u03d9\17\7\1\0\1\u03da\30\0\10\7\1\0\1\7"+
    "\2\0\4\7\1\u03db\22\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u03dc\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\7\7\1\u03dd\17\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\6\7"+
    "\1\u03de\20\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\12\7\1\u03df\14\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u03e0\24\7\1\0\1\7"+
    "\30\0\4\7\1\u03e1\3\7\1\0\1\7\2\0\27\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\5\7"+
    "\1\u03e2\21\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\12\7\1\u03e3\14\7\1\0\1\7\30\0\5\7"+
    "\1\u03e4\2\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u03e5\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u03e6\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\7\7\1\u03e7\17\7\1\0\1\7\30\0\4\7"+
    "\1\u03e8\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\2\7\1\u03e9\24\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\13\7"+
    "\1\u03ea\13\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u03eb\24\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\11\7\1\u03ec\15\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\12\7\1\u03ed\14\7"+
    "\1\0\1\7\30\0\5\7\1\u03ee\2\7\1\0\1\7"+
    "\2\0\1\7\1\u03ef\2\7\1\u03f0\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\7\1\u03f1\25\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\4\7"+
    "\1\u03f2\22\7\1\0\1\7\30\0\4\7\1\u03f3\3\7"+
    "\1\0\1\7\2\0\27\7\1\0\1\7\30\0\4\7"+
    "\1\u03f4\3\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u03f5\22\7"+
    "\1\0\1\7\30\0\2\7\1\u03f6\5\7\1\0\1\7"+
    "\2\0\10\7\1\u03f7\16\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\2\7\1\u03f8\24\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\u03f9\26\7\1\0"+
    "\1\7\30\0\5\7\1\u03fa\2\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u03fb\6\7\1\u03fc\4\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u03fd\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\7\7\1\u03fe"+
    "\17\7\1\0\1\7\30\0\4\7\1\u03ff\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u0400\13\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0401\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0402"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\21\7\1\u0403\5\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0404\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\7\7\1\u0405\17\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\7\7\1\u0406"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0407\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0408\22\7\1\0\1\7\51\0"+
    "\1\u0409\53\0\10\7\1\0\1\7\2\0\11\7\1\u040a"+
    "\15\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u040b\21\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u040c\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u040d\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\20\7\1\u040e"+
    "\6\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u040f\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0410\24\7\1\0\1\7\30\0"+
    "\4\7\1\u0411\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\6\7\1\u0412\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\7\7\1\u0413\17\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u0414\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u0415\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\7\7\1\u0416"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u0417\21\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u0418\13\7\1\0\1\7\30\0"+
    "\6\7\1\u0419\1\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\7\7\1\u041a"+
    "\17\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u041b\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\10\7\1\u041c\16\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u041d\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u041e\26\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u041f\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u0420\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0421\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0422\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u0423"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\7\7\1\u0424\17\7\1\0\1\7\30\0\5\7\1\u0425"+
    "\2\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u0426\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u0427"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0428\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u0429\13\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\10\7\1\u042a\16\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\7\1\u042b"+
    "\25\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u042c\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u042d\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\11\7\1\u042e\15\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\u042f\26\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\u0430"+
    "\26\7\1\0\1\7\30\0\4\7\1\u0431\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u0432\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\14\7\1\u0433\12\7\1\0"+
    "\1\7\53\0\1\u0434\51\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0435\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u0436\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\20\7\1\u0437\6\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\1\7\1\u0438"+
    "\25\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0439\24\7\1\0\1\7\30\0\4\7\1\u043a"+
    "\3\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u043b\22\7\1\0"+
    "\1\7\30\0\4\7\1\u043c\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\4\7\1\u043d\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u043e\24\7\1\0\1\7\30\0"+
    "\5\7\1\u043f\2\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0440"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0441\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\15\7\1\u0442\11\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\16\7\1\u0443\10\7\1\0"+
    "\1\7\30\0\4\7\1\u0444\3\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\6\7\1\u0445\1\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\u0446\25\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0447\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\15\7\1\u0448"+
    "\11\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\11\7\1\u0449\15\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\22\7\1\u044a\4\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\12\7\1\u044b\14\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\5\7\1\u044c"+
    "\21\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\12\7\1\u044d\14\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u044e\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\16\7\1\u044f\10\7\1\0"+
    "\1\7\30\0\6\7\1\u0450\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\35\0\1\u0451\67\0\10\7\1\0"+
    "\1\7\2\0\1\7\1\u0452\25\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\7\7\1\u0453\17\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\u0454"+
    "\13\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\17\7\1\u0455\7\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u0456\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\5\7\1\u0457\21\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0458"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0459\24\7\1\0\1\7\30\0\6\7\1\u045a"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\13\7\1\u045b\13\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\12\7\1\u045c"+
    "\14\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\5\7\1\u045d\21\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u045e\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\6\7\1\u045f\20\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\13\7\1\u0460"+
    "\13\7\1\0\1\7\30\0\4\7\1\u0461\3\7\1\0"+
    "\1\7\2\0\27\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\15\7\1\u0462\11\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\7\1\u0463\25\7\1\0"+
    "\1\7\30\0\6\7\1\u0464\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\11\7\1\u0465\15\7\1\0\1\7\52\0\1\u0466\52\0"+
    "\4\7\1\u0467\3\7\1\0\1\7\2\0\27\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0468"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\10\7\1\u0469\16\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\13\7\1\u046a\13\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u046b\24\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u046c"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u046d\22\7\1\0\1\7\30\0\6\7\1\u046e"+
    "\1\7\1\0\1\7\2\0\27\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\14\7\1\u046f\12\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\17\7\1\u0470"+
    "\7\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0471\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0472\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\4\7\1\u0473\22\7\1\0"+
    "\1\7\30\0\10\7\1\0\1\7\2\0\2\7\1\u0474"+
    "\24\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u0475\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u0476\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0477\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\5\7\1\u0478\21\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\1\u0479"+
    "\26\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\4\7\1\u047a\22\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\5\7\1\u047b\21\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u047c\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\15\7\1\u047d\11\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\12\7"+
    "\1\u047e\14\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\13\7\1\u047f\13\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\6\7\1\u0480\20\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\4\7\1\u0481\22\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\2\7"+
    "\1\u0482\24\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\11\7\1\u0483\15\7\1\0\1\7\30\0\10\7"+
    "\1\0\1\7\2\0\4\7\1\u0484\22\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\7\1\u0485\2\7"+
    "\1\u0486\22\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\1\u0487\26\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\2\7\1\u0488\24\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0489\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\16\7\1\u048a\10\7"+
    "\1\0\1\7\30\0\10\7\1\0\1\7\2\0\4\7"+
    "\1\u048b\22\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\16\7\1\u048c\10\7\1\0\1\7\30\0\6\7"+
    "\1\u048d\1\7\1\0\1\7\2\0\27\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\1\u048e\26\7\1\0"+
    "\1\7\30\0\6\7\1\u048f\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\2\7\1\u0490\24\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\12\7\1\u0491\14\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\2\7\1\u0492\24\7\1\0"+
    "\1\7\30\0\6\7\1\u0493\1\7\1\0\1\7\2\0"+
    "\27\7\1\0\1\7\30\0\10\7\1\0\1\7\2\0"+
    "\13\7\1\u0494\13\7\1\0\1\7\30\0\10\7\1\0"+
    "\1\7\2\0\4\7\1\u0495\22\7\1\0\1\7\30\0"+
    "\10\7\1\0\1\7\2\0\1\u0496\26\7\1\0\1\7"+
    "\30\0\10\7\1\0\1\7\2\0\16\7\1\u0497\10\7"+
    "\1\0\1\7\30\0\6\7\1\u0498\1\7\1\0\1\7"+
    "\2\0\27\7\1\0\1\7\30\0\10\7\1\0\1\7"+
    "\2\0\2\7\1\u0499\24\7\1\0\1\7\21\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[56974];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\10\1\2\11\24\1\3\11"+
    "\1\1\1\11\1\1\1\11\1\1\2\11\7\1\1\0"+
    "\17\1\2\11\144\1\12\11\1\0\1\1\1\11\1\0"+
    "\247\1\1\0\u022c\1\1\0\105\1\1\0\65\1\1\0"+
    "\52\1\1\0\34\1\1\0\24\1\1\11\63\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1177];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public LexerCup(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public LexerCup(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2260) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 226: 
          { return new Symbol(sym.READONLY, yychar, yyline, yytext() );
          }
        case 296: break;
        case 182: 
          { return new Symbol(sym.BINARY, yychar, yyline, yytext() );
          }
        case 297: break;
        case 166: 
          { return new Symbol(sym.OPTION, yychar, yyline, yytext() );
          }
        case 298: break;
        case 83: 
          { return new Symbol(sym.DENY, yychar, yyline, yytext() );
          }
        case 299: break;
        case 151: 
          { return new Symbol(sym.NULLIF, yychar, yyline, yytext() );
          }
        case 300: break;
        case 145: 
          { return new Symbol(sym.GRANT, yychar, yyline, yytext() );
          }
        case 301: break;
        case 96: 
          { return new Symbol(sym.REAL, yychar, yyline, yytext() );
          }
        case 302: break;
        case 261: 
          { return new Symbol(sym.STATISTICS, yychar, yyline, yytext() );
          }
        case 303: break;
        case 283: 
          { return new Symbol(sym.AUTHORIZATION, yychar, yyline, yytext() );
          }
        case 304: break;
        case 93: 
          { return new Symbol(sym.TIME, yychar, yyline, yytext() );
          }
        case 305: break;
        case 72: 
          { return new Symbol(sym.BIT, yychar, yyline, yytext() );
          }
        case 306: break;
        case 56: 
          { return new Symbol(sym.USE, yychar, yyline, yytext() );
          }
        case 307: break;
        case 110: 
          { return new Symbol(sym.BULK, yychar, yyline, yytext() );
          }
        case 308: break;
        case 97: 
          { return new Symbol(sym.READ, yychar, yyline, yytext() );
          }
        case 309: break;
        case 155: 
          { return new Symbol(sym.DELETE, yychar, yyline, yytext() );
          }
        case 310: break;
        case 37: 
          { return new Symbol(sym.IN, yychar, yyline, yytext() );
          }
        case 311: break;
        case 141: 
          { return new Symbol(sym.MERGE, yychar, yyline, yytext() );
          }
        case 312: break;
        case 50: 
          { return new Symbol(sym.Digual, yychar, yyline, yytext() );
          }
        case 313: break;
        case 39: 
          { return new Symbol(sym.IF, yychar, yyline, yytext() );
          }
        case 314: break;
        case 165: 
          { return new Symbol(sym.OUTPUT, yychar, yyline, yytext() );
          }
        case 315: break;
        case 82: 
          { return new Symbol(sym.DATE, yychar, yyline, yytext() );
          }
        case 316: break;
        case 54: 
          { return new Symbol(sym.Dbarra, yychar, yyline, yytext() );
          }
        case 317: break;
        case 232: 
          { return new Symbol(sym.COALESCE, yychar, yyline, yytext() );
          }
        case 318: break;
        case 185: 
          { return new Symbol(sym.KEYSET, yychar, yyline, yytext() );
          }
        case 319: break;
        case 196: 
          { return new Symbol(sym.TINYINT, yychar, yyline, yytext() );
          }
        case 320: break;
        case 176: 
          { return new Symbol(sym.STATIC, yychar, yyline, yytext() );
          }
        case 321: break;
        case 244: 
          { return new Symbol(sym.PRECISION, yychar, yyline, yytext() );
          }
        case 322: break;
        case 142: 
          { return new Symbol(sym.MONEY, yychar, yyline, yytext() );
          }
        case 323: break;
        case 117: 
          { return new Symbol(sym.KILL, yychar, yyline, yytext() );
          }
        case 324: break;
        case 66: 
          { return new Symbol(sym.OFF, yychar, yyline, yytext() );
          }
        case 325: break;
        case 234: 
          { return new Symbol(sym.SHUTDOWN, yychar, yyline, yytext() );
          }
        case 326: break;
        case 200: 
          { return new Symbol(sym.PERCENT, yychar, yyline, yytext() );
          }
        case 327: break;
        case 109: 
          { return new Symbol(sym.MARK, yychar, yyline, yytext() );
          }
        case 328: break;
        case 104: 
          { return new Symbol(sym.INTO, yychar, yyline, yytext() );
          }
        case 329: break;
        case 179: 
          { return new Symbol(sym.HAVING, yychar, yyline, yytext() );
          }
        case 330: break;
        case 195: 
          { return new Symbol(sym.TRIGGER, yychar, yyline, yytext() );
          }
        case 331: break;
        case 163: 
          { return new Symbol(sym.REVOKE, yychar, yyline, yytext() );
          }
        case 332: break;
        case 237: 
          { return new Symbol(sym.FUNCTION, yychar, yyline, yytext() );
          }
        case 333: break;
        case 105: 
          { return new Symbol(sym.SAVE, yychar, yyline, yytext() );
          }
        case 334: break;
        case 172: 
          { return new Symbol(sym.COMMIT, yychar, yyline, yytext() );
          }
        case 335: break;
        case 1: 
          { return new Symbol(sym.ERROR, yychar, yyline, yytext() );
          }
        case 336: break;
        case 57: 
          { return new Symbol(sym.AND, yychar, yyline, yytext() );
          }
        case 337: break;
        case 84: 
          { return new Symbol(sym.DESC, yychar, yyline, yytext() );
          }
        case 338: break;
        case 202: 
          { return new Symbol(sym.OPENXML, yychar, yyline, yytext() );
          }
        case 339: break;
        case 230: 
          { return new Symbol(sym.CONTAINS, yychar, yyline, yytext() );
          }
        case 340: break;
        case 4: 
          { return new Symbol(sym.Mul, yychar, yyline, yytext() );
          }
        case 341: break;
        case 265: 
          { return new Symbol(sym.DISTRIBUTED, yychar, yyline, yytext() );
          }
        case 342: break;
        case 173: 
          { return new Symbol(sym.INLINE, yychar, yyline, yytext() );
          }
        case 343: break;
        case 204: 
          { return new Symbol(sym.CURRENT, yychar, yyline, yytext() );
          }
        case 344: break;
        case 107: 
          { return new Symbol(sym.SOME, yychar, yyline, yytext() );
          }
        case 345: break;
        case 106: 
          { return new Symbol(sym.SELF, yychar, yyline, yytext() );
          }
        case 346: break;
        case 236: 
          { return new Symbol(sym.HOLDLOCK, yychar, yyline, yytext() );
          }
        case 347: break;
        case 146: 
          { return new Symbol(sym.GROUP, yychar, yyline, yytext() );
          }
        case 348: break;
        case 164: 
          { return new Symbol(sym.PUBLIC, yychar, yyline, yytext() );
          }
        case 349: break;
        case 205: 
          { return new Symbol(sym.CASCADE, yychar, yyline, yytext() );
          }
        case 350: break;
        case 264: 
          { return new Symbol(sym.FILEGROWTH, yychar, yyline, yytext() );
          }
        case 351: break;
        case 215: 
          { return new Symbol(sym.VARCHAR, yychar, yyline, yytext() );
          }
        case 352: break;
        case 156: 
          { return new Symbol(sym.DOUBLE, yychar, yyline, yytext() );
          }
        case 353: break;
        case 81: 
          { return new Symbol(sym.DUMP, yychar, yyline, yytext() );
          }
        case 354: break;
        case 278: 
          { return new Symbol(sym.SESSION_USER, yychar, yyline, yytext() );
          }
        case 355: break;
        case 31: 
          { return new Symbol(sym.AS, yychar, yyline, yytext() );
          }
        case 356: break;
        case 16: 
          { return new Symbol(sym.Acorchete, yychar, yyline, yytext() );
          }
        case 357: break;
        case 102: 
          { return new Symbol(sym.CASE, yychar, yyline, yytext() );
          }
        case 358: break;
        case 174: 
          { return new Symbol(sym.INSERT, yychar, yyline, yytext() );
          }
        case 359: break;
        case 40: 
          { return new Symbol(sym.MB, yychar, yyline, yytext() );
          }
        case 360: break;
        case 247: 
          { return new Symbol(sym.CLUSTERED, yychar, yyline, yytext() );
          }
        case 361: break;
        case 181: 
          { return new Symbol(sym.BROWSE, yychar, yyline, yytext() );
          }
        case 362: break;
        case 28: 
          { /*Ignore*/
          }
        case 363: break;
        case 123: 
          { return new Symbol(sym.UNION, yychar, yyline, yytext() );
          }
        case 364: break;
        case 251: 
          { return new Symbol(sym.VARBINARY, yychar, yyline, yytext() );
          }
        case 365: break;
        case 144: 
          { return new Symbol(sym.BREAK, yychar, yyline, yytext() );
          }
        case 366: break;
        case 263: 
          { return new Symbol(sym.FILLFACTOR, yychar, yyline, yytext() );
          }
        case 367: break;
        case 99: 
          { return new Symbol(sym.PROC, yychar, yyline, yytext() );
          }
        case 368: break;
        case 119: 
          { return new Symbol(sym.JOIN, yychar, yyline, yytext() );
          }
        case 369: break;
        case 124: 
          { return new Symbol(sym.LOCAL, yychar, yyline, yytext() );
          }
        case 370: break;
        case 207: 
          { return new Symbol(sym.COLLATE, yychar, yyline, yytext() );
          }
        case 371: break;
        case 178: 
          { return new Symbol(sym.SCHEMA, yychar, yyline, yytext() );
          }
        case 372: break;
        case 95: 
          { return new Symbol(sym.RULE, yychar, yyline, yytext() );
          }
        case 373: break;
        case 78: 
          { return new Symbol(sym.LEFT, yychar, yyline, yytext() );
          }
        case 374: break;
        case 122: 
          { return new Symbol(sym.NCHAR, yychar, yyline, yytext() );
          }
        case 375: break;
        case 65: 
          { return new Symbol(sym.OUT, yychar, yyline, yytext() );
          }
        case 376: break;
        case 245: 
          { return new Symbol(sym.PROCEDURE, yychar, yyline, yytext() );
          }
        case 377: break;
        case 171: 
          { return new Symbol(sym.COLUMN, yychar, yyline, yytext() );
          }
        case 378: break;
        case 143: 
          { return new Symbol(sym.BEGIN, yychar, yyline, yytext() );
          }
        case 379: break;
        case 38: 
          { return new Symbol(sym.IS, yychar, yyline, yytext() );
          }
        case 380: break;
        case 228: 
          { return new Symbol(sym.ROLLBACK, yychar, yyline, yytext() );
          }
        case 381: break;
        case 10: 
          { return new Symbol(sym.Punto, yychar, yyline, yytext() );
          }
        case 382: break;
        case 219: 
          { return new Symbol(sym.DATABASE, yychar, yyline, yytext() );
          }
        case 383: break;
        case 192: 
          { return new Symbol(sym.DEFAULT, yychar, yyline, yytext() );
          }
        case 384: break;
        case 13: 
          { return new Symbol(sym.Porce, yychar, yyline, yytext() );
          }
        case 385: break;
        case 191: 
          { return new Symbol(sym.DECIMAL, yychar, yyline, yytext() );
          }
        case 386: break;
        case 294: 
          { return new Symbol(sym.SEMANTICSIMILARITYTABLE, yychar, yyline, yytext() );
          }
        case 387: break;
        case 70: 
          { return new Symbol(sym.MAX, yychar, yyline, yytext() );
          }
        case 388: break;
        case 126: 
          { return new Symbol(sym.TABLE, yychar, yyline, yytext() );
          }
        case 389: break;
        case 212: 
          { return new Symbol(sym.BETWEEN, yychar, yyline, yytext() );
          }
        case 390: break;
        case 229: 
          { return new Symbol(sym.ROWCOUNT, yychar, yyline, yytext() );
          }
        case 391: break;
        case 60: 
          { return new Symbol(sym.ADD, yychar, yyline, yytext() );
          }
        case 392: break;
        case 129: 
          { return new Symbol(sym.PIVOT, yychar, yyline, yytext() );
          }
        case 393: break;
        case 220: 
          { return new Symbol(sym.DATETIME, yychar, yyline, yytext() );
          }
        case 394: break;
        case 175: 
          { return new Symbol(sym.SELECT, yychar, yyline, yytext() );
          }
        case 395: break;
        case 206: 
          { return new Symbol(sym.CONVERT, yychar, yyline, yytext() );
          }
        case 396: break;
        case 241: 
          { return new Symbol(sym.DATETIME2, yychar, yyline, yytext() );
          }
        case 397: break;
        case 262: 
          { return new Symbol(sym.SMALLMONEY, yychar, yyline, yytext() );
          }
        case 398: break;
        case 259: 
          { return new Symbol(sym.CONSTRAINT, yychar, yyline, yytext() );
          }
        case 399: break;
        case 214: 
          { return new Symbol(sym.WAITFOR, yychar, yyline, yytext() );
          }
        case 400: break;
        case 58: 
          { return new Symbol(sym.ANY, yychar, yyline, yytext() );
          }
        case 401: break;
        case 290: 
          { return new Symbol(sym.OPENDATASOURCE, yychar, yyline, yytext() );
          }
        case 402: break;
        case 98: 
          { return new Symbol(sym.PLAN, yychar, yyline, yytext() );
          }
        case 403: break;
        case 197: 
          { return new Symbol(sym.TSEQUAL, yychar, yyline, yytext() );
          }
        case 404: break;
        case 268: 
          { return new Symbol(sym.TRY_CONVERT, yychar, yyline, yytext() );
          }
        case 405: break;
        case 94: 
          { return new Symbol(sym.THEN, yychar, yyline, yytext() );
          }
        case 406: break;
        case 235: 
          { return new Symbol(sym.SMALLINT, yychar, yyline, yytext() );
          }
        case 407: break;
        case 258: 
          { return new Symbol(sym.OPTIMISTIC, yychar, yyline, yytext() );
          }
        case 408: break;
        case 137: 
          { return new Symbol(sym.INNER, yychar, yyline, yytext() );
          }
        case 409: break;
        case 161: 
          { return new Symbol(sym.RETURN, yychar, yyline, yytext() );
          }
        case 410: break;
        case 63: 
          { return new Symbol(sym.END, yychar, yyline, yytext() );
          }
        case 411: break;
        case 254: 
          { return new Symbol(sym.ENCRYPTION, yychar, yyline, yytext() );
          }
        case 412: break;
        case 2: 
          { /* skip */
          }
        case 413: break;
        case 30: 
          { return new Symbol(sym.Varchar, yychar, yyline, yytext() );
          }
        case 414: break;
        case 285: 
          { return new Symbol(sym.SECURITYAUDIT, yychar, yyline, yytext() );
          }
        case 415: break;
        case 41: 
          { return new Symbol(sym.BY, yychar, yyline, yytext() );
          }
        case 416: break;
        case 69: 
          { return new Symbol(sym.SET, yychar, yyline, yytext() );
          }
        case 417: break;
        case 115: 
          { return new Symbol(sym.WITH, yychar, yyline, yytext() );
          }
        case 418: break;
        case 282: 
          { return new Symbol(sym.WITHINGROUP, yychar, yyline, yytext() );
          }
        case 419: break;
        case 73: 
          { return new Symbol(sym.FOR, yychar, yyline, yytext() );
          }
        case 420: break;
        case 257: 
          { return new Symbol(sym.OPENROWSET, yychar, yyline, yytext() );
          }
        case 421: break;
        case 213: 
          { return new Symbol(sym.FOREIGN, yychar, yyline, yytext() );
          }
        case 422: break;
        case 256: 
          { return new Symbol(sym.ROWGUIDCOL, yychar, yyline, yytext() );
          }
        case 423: break;
        case 224: 
          { return new Symbol(sym.TRUNCATE, yychar, yyline, yytext() );
          }
        case 424: break;
        case 194: 
          { return new Symbol(sym.EXECUTE, yychar, yyline, yytext() );
          }
        case 425: break;
        case 168: 
          { return new Symbol(sym.CALLED, yychar, yyline, yytext() );
          }
        case 426: break;
        case 233: 
          { return new Symbol(sym.IDENTITY, yychar, yyline, yytext() );
          }
        case 427: break;
        case 52: 
          { return new Symbol(sym.Diferente, yychar, yyline, yytext() );
          }
        case 428: break;
        case 209: 
          { return new Symbol(sym.INCLUDE, yychar, yyline, yytext() );
          }
        case 429: break;
        case 85: 
          { return new Symbol(sym.DROP, yychar, yyline, yytext() );
          }
        case 430: break;
        case 89: 
          { return new Symbol(sym.EXEC, yychar, yyline, yytext() );
          }
        case 431: break;
        case 240: 
          { return new Symbol(sym.UNLIMITED, yychar, yyline, yytext() );
          }
        case 432: break;
        case 45: 
          { return new Symbol(sym.Dcorchete, yychar, yyline, yytext() );
          }
        case 433: break;
        case 193: 
          { return new Symbol(sym.DYNAMIC, yychar, yyline, yytext() );
          }
        case 434: break;
        case 252: 
          { return new Symbol(sym.UPDATETEXT, yychar, yyline, yytext() );
          }
        case 435: break;
        case 210: 
          { return new Symbol(sym.SETUSER, yychar, yyline, yytext() );
          }
        case 436: break;
        case 133: 
          { return new Symbol(sym.CLOSE, yychar, yyline, yytext() );
          }
        case 437: break;
        case 87: 
          { return new Symbol(sym.DBCC, yychar, yyline, yytext() );
          }
        case 438: break;
        case 242: 
          { return new Symbol(sym.RAISERROR, yychar, yyline, yytext() );
          }
        case 439: break;
        case 199: 
          { return new Symbol(sym.RESTORE, yychar, yyline, yytext() );
          }
        case 440: break;
        case 221: 
          { return new Symbol(sym.DISTINCT, yychar, yyline, yytext() );
          }
        case 441: break;
        case 14: 
          { return new Symbol(sym.PuntoYComa, yychar, yyline, yytext() );
          }
        case 442: break;
        case 293: 
          { return new Symbol(sym.SEMANTICKEYPHRASETABLE, yychar, yyline, yytext() );
          }
        case 443: break;
        case 12: 
          { return new Symbol(sym.VarcharError, yychar, yyline, yytext() );
          }
        case 444: break;
        case 159: 
          { return new Symbol(sym.ERRLVL, yychar, yyline, yytext() );
          }
        case 445: break;
        case 33: 
          { return new Symbol(sym.TB, yychar, yyline, yytext() );
          }
        case 446: break;
        case 279: 
          { return new Symbol(sym.SCROLLLOCKS, yychar, yyline, yytext() );
          }
        case 447: break;
        case 292: 
          { return new Symbol(sym.CURRENT_TIMESTAMP, yychar, yyline, yytext() );
          }
        case 448: break;
        case 75: 
          { return new Symbol(sym.NULL, yychar, yyline, yytext() );
          }
        case 449: break;
        case 128: 
          { return new Symbol(sym.PRINT, yychar, yyline, yytext() );
          }
        case 450: break;
        case 160: 
          { return new Symbol(sym.ESCAPE, yychar, yyline, yytext() );
          }
        case 451: break;
        case 281: 
          { return new Symbol(sym.FORWARDONLY, yychar, yyline, yytext() );
          }
        case 452: break;
        case 120: 
          { return new Symbol(sym.NAMES, yychar, yyline, yytext() );
          }
        case 453: break;
        case 150: 
          { return new Symbol(sym.WHILE, yychar, yyline, yytext() );
          }
        case 454: break;
        case 217: 
          { return new Symbol(sym.NATIONAL, yychar, yyline, yytext() );
          }
        case 455: break;
        case 121: 
          { return new Symbol(sym.NTEXT, yychar, yyline, yytext() );
          }
        case 456: break;
        case 5: 
          { return new Symbol(sym.Resta, yychar, yyline, yytext() );
          }
        case 457: break;
        case 132: 
          { return new Symbol(sym.OWNER, yychar, yyline, yytext() );
          }
        case 458: break;
        case 43: 
          { return new Symbol(sym.GB, yychar, yyline, yytext() );
          }
        case 459: break;
        case 130: 
          { return new Symbol(sym.OUTER, yychar, yyline, yytext() );
          }
        case 460: break;
        case 6: 
          { return new Symbol(sym.Identificador, yychar, yyline, yytext() );
          }
        case 461: break;
        case 216: 
          { return new Symbol(sym.VARYING, yychar, yyline, yytext() );
          }
        case 462: break;
        case 170: 
          { return new Symbol(sym.CREATE, yychar, yyline, yytext() );
          }
        case 463: break;
        case 269: 
          { return new Symbol(sym.REPLICATION, yychar, yyline, yytext() );
          }
        case 464: break;
        case 186: 
          { return new Symbol(sym.VALUES, yychar, yyline, yytext() );
          }
        case 465: break;
        case 135: 
          { return new Symbol(sym.COUNT, yychar, yyline, yytext() );
          }
        case 466: break;
        case 7: 
          { return new Symbol(sym.IdentificadorError, yychar, yyline, yytext() );
          }
        case 467: break;
        case 286: 
          { return new Symbol(sym.SCHEMABINDING, yychar, yyline, yytext() );
          }
        case 468: break;
        case 287: 
          { return new Symbol(sym.SMALLDATETIME, yychar, yyline, yytext() );
          }
        case 469: break;
        case 211: 
          { return new Symbol(sym.MAXSIZE, yychar, yyline, yytext() );
          }
        case 470: break;
        case 35: 
          { return new Symbol(sym.OR, yychar, yyline, yytext() );
          }
        case 471: break;
        case 223: 
          { return new Symbol(sym.TEXTSIZE, yychar, yyline, yytext() );
          }
        case 472: break;
        case 162: 
          { return new Symbol(sym.REVERT, yychar, yyline, yytext() );
          }
        case 473: break;
        case 34: 
          { return new Symbol(sym.ON, yychar, yyline, yytext() );
          }
        case 474: break;
        case 101: 
          { return new Symbol(sym.OVER, yychar, yyline, yytext() );
          }
        case 475: break;
        case 103: 
          { return new Symbol(sym.CHAR, yychar, yyline, yytext() );
          }
        case 476: break;
        case 118: 
          { return new Symbol(sym.VIEW, yychar, yyline, yytext() );
          }
        case 477: break;
        case 291: 
          { return new Symbol(sym.IDENTITY_INSERT, yychar, yyline, yytext() );
          }
        case 478: break;
        case 36: 
          { return new Symbol(sym.OF, yychar, yyline, yytext() );
          }
        case 479: break;
        case 153: 
          { return new Symbol(sym.UPDATE, yychar, yyline, yytext() );
          }
        case 480: break;
        case 134: 
          { return new Symbol(sym.CROSS, yychar, yyline, yytext() );
          }
        case 481: break;
        case 138: 
          { return new Symbol(sym.INDEX, yychar, yyline, yytext() );
          }
        case 482: break;
        case 59: 
          { return new Symbol(sym.ALL, yychar, yyline, yytext() );
          }
        case 483: break;
        case 67: 
          { return new Symbol(sym.INT, yychar, yyline, yytext() );
          }
        case 484: break;
        case 111: 
          { return new Symbol(sym.GOTO, yychar, yyline, yytext() );
          }
        case 485: break;
        case 23: 
          { return new Symbol(sym.Hashtag, yychar, yyline, yytext() );
          }
        case 486: break;
        case 9: 
          { return new Symbol(sym.Integer, yychar, yyline, yytext() );
          }
        case 487: break;
        case 48: 
          { return new Symbol(sym.Dhashtag, yychar, yyline, yytext() );
          }
        case 488: break;
        case 227: 
          { return new Symbol(sym.RESTRICT, yychar, yyline, yytext() );
          }
        case 489: break;
        case 183: 
          { return new Symbol(sym.BIGINT, yychar, yyline, yytext() );
          }
        case 490: break;
        case 20: 
          { return new Symbol(sym.Allave, yychar, yyline, yytext() );
          }
        case 491: break;
        case 112: 
          { return new Symbol(sym.FULL, yychar, yyline, yytext() );
          }
        case 492: break;
        case 116: 
          { return new Symbol(sym.WHEN, yychar, yyline, yytext() );
          }
        case 493: break;
        case 201: 
          { return new Symbol(sym.PRIMARY, yychar, yyline, yytext() );
          }
        case 494: break;
        case 86: 
          { return new Symbol(sym.DISK, yychar, yyline, yytext() );
          }
        case 495: break;
        case 21: 
          { return new Symbol(sym.Cllave, yychar, yyline, yytext() );
          }
        case 496: break;
        case 80: 
          { return new Symbol(sym.LIKE, yychar, yyline, yytext() );
          }
        case 497: break;
        case 246: 
          { return new Symbol(sym.OPENQUERY, yychar, yyline, yytext() );
          }
        case 498: break;
        case 100: 
          { return new Symbol(sym.OPEN, yychar, yyline, yytext() );
          }
        case 499: break;
        case 275: 
          { return new Symbol(sym.CURRENT_USER, yychar, yyline, yytext() );
          }
        case 500: break;
        case 92: 
          { return new Symbol(sym.TRAN, yychar, yyline, yytext() );
          }
        case 501: break;
        case 51: 
          { return new Symbol(sym.MayorIgual, yychar, yyline, yytext() );
          }
        case 502: break;
        case 222: 
          { return new Symbol(sym.EXTERNAL, yychar, yyline, yytext() );
          }
        case 503: break;
        case 127: 
          { return new Symbol(sym.RIGHT, yychar, yyline, yytext() );
          }
        case 504: break;
        case 47: 
          { return new Symbol(sym.Dllaves, yychar, yyline, yytext() );
          }
        case 505: break;
        case 249: 
          { return new Symbol(sym.IMMEDIATE, yychar, yyline, yytext() );
          }
        case 506: break;
        case 64: 
          { return new Symbol(sym.TOP, yychar, yyline, yytext() );
          }
        case 507: break;
        case 288: 
          { return new Symbol(sym.FREETEXTTABLE, yychar, yyline, yytext() );
          }
        case 508: break;
        case 255: 
          { return new Symbol(sym.REFERENCES, yychar, yyline, yytext() );
          }
        case 509: break;
        case 61: 
          { return new Symbol(sym.ASC, yychar, yyline, yytext() );
          }
        case 510: break;
        case 29: 
          { return new Symbol(sym.Float, yychar, yyline, yytext() );
          }
        case 511: break;
        case 157: 
          { return new Symbol(sym.EXCEPT, yychar, yyline, yytext() );
          }
        case 512: break;
        case 184: 
          { return new Symbol(sym.GLOBAL, yychar, yyline, yytext() );
          }
        case 513: break;
        case 198: 
          { return new Symbol(sym.RETURNS, yychar, yyline, yytext() );
          }
        case 514: break;
        case 114: 
          { return new Symbol(sym.FILE, yychar, yyline, yytext() );
          }
        case 515: break;
        case 44: 
          { return new Symbol(sym.KB, yychar, yyline, yytext() );
          }
        case 516: break;
        case 88: 
          { return new Symbol(sym.ELSE, yychar, yyline, yytext() );
          }
        case 517: break;
        case 76: 
          { return new Symbol(sym.NAME, yychar, yyline, yytext() );
          }
        case 518: break;
        case 22: 
          { return new Symbol(sym.Arroba, yychar, yyline, yytext() );
          }
        case 519: break;
        case 49: 
          { return new Symbol(sym.MenorIgual, yychar, yyline, yytext() );
          }
        case 520: break;
        case 284: 
          { return new Symbol(sym.CONTAINSTABLE, yychar, yyline, yytext() );
          }
        case 521: break;
        case 74: 
          { return new Symbol(sym.KEY, yychar, yyline, yytext() );
          }
        case 522: break;
        case 208: 
          { return new Symbol(sym.COMPUTE, yychar, yyline, yytext() );
          }
        case 523: break;
        case 125: 
          { return new Symbol(sym.ALTER, yychar, yyline, yytext() );
          }
        case 524: break;
        case 140: 
          { return new Symbol(sym.IMAGE, yychar, yyline, yytext() );
          }
        case 525: break;
        case 32: 
          { return new Symbol(sym.TO, yychar, yyline, yytext() );
          }
        case 526: break;
        case 68: 
          { return new Symbol(sym.SUM, yychar, yyline, yytext() );
          }
        case 527: break;
        case 267: 
          { return new Symbol(sym.TRANSACTION, yychar, yyline, yytext() );
          }
        case 528: break;
        case 55: 
          { return new Symbol(sym.NOT, yychar, yyline, yytext() );
          }
        case 529: break;
        case 243: 
          { return new Symbol(sym.RECOMPILE, yychar, yyline, yytext() );
          }
        case 530: break;
        case 225: 
          { return new Symbol(sym.READTEXT, yychar, yyline, yytext() );
          }
        case 531: break;
        case 131: 
          { return new Symbol(sym.ORDER, yychar, yyline, yytext() );
          }
        case 532: break;
        case 273: 
          { return new Symbol(sym.NONCLUSTERED, yychar, yyline, yytext() );
          }
        case 533: break;
        case 266: 
          { return new Symbol(sym.TABLESAMPLE, yychar, yyline, yytext() );
          }
        case 534: break;
        case 11: 
          { return new Symbol(sym.Suma, yychar, yyline, yytext() );
          }
        case 535: break;
        case 77: 
          { return new Symbol(sym.USER, yychar, yyline, yytext() );
          }
        case 536: break;
        case 8: 
          { return new Symbol(sym.Bit, yychar, yyline, yytext() );
          }
        case 537: break;
        case 53: 
          { return new Symbol(sym.Dampersand, yychar, yyline, yytext() );
          }
        case 538: break;
        case 42: 
          { return new Symbol(sym.GO, yychar, yyline, yytext() );
          }
        case 539: break;
        case 239: 
          { return new Symbol(sym.FILENAME, yychar, yyline, yytext() );
          }
        case 540: break;
        case 190: 
          { return new Symbol(sym.DECLARE, yychar, yyline, yytext() );
          }
        case 541: break;
        case 154: 
          { return new Symbol(sym.LINENO, yychar, yyline, yytext() );
          }
        case 542: break;
        case 19: 
          { return new Symbol(sym.Cparentesis, yychar, yyline, yytext() );
          }
        case 543: break;
        case 238: 
          { return new Symbol(sym.FREETEXT, yychar, yyline, yytext() );
          }
        case 544: break;
        case 27: 
          { return new Symbol(sym.Exclamacion, yychar, yyline, yytext() );
          }
        case 545: break;
        case 295: 
          { return new Symbol(sym.SEMANTICSIMILARITYDETAILSTABLE, yychar, yyline, yytext() );
          }
        case 546: break;
        case 147: 
          { return new Symbol(sym.FLOAT, yychar, yyline, yytext() );
          }
        case 547: break;
        case 15: 
          { return new Symbol(sym.Coma, yychar, yyline, yytext() );
          }
        case 548: break;
        case 26: 
          { return new Symbol(sym.Mayor, yychar, yyline, yytext() );
          }
        case 549: break;
        case 108: 
          { return new Symbol(sym.SIZE, yychar, yyline, yytext() );
          }
        case 550: break;
        case 158: 
          { return new Symbol(sym.EXISTS, yychar, yyline, yytext() );
          }
        case 551: break;
        case 189: 
          { return new Symbol(sym.UNPIVOT, yychar, yyline, yytext() );
          }
        case 552: break;
        case 274: 
          { return new Symbol(sym.TYPEWARNING, yychar, yyline, yytext() );
          }
        case 553: break;
        case 71: 
          { return new Symbol(sym.MIN, yychar, yyline, yytext() );
          }
        case 554: break;
        case 177: 
          { return new Symbol(sym.SCROLL, yychar, yyline, yytext() );
          }
        case 555: break;
        case 260: 
          { return new Symbol(sym.CHECKPOINT, yychar, yyline, yytext() );
          }
        case 556: break;
        case 90: 
          { return new Symbol(sym.EXIT, yychar, yyline, yytext() );
          }
        case 557: break;
        case 79: 
          { return new Symbol(sym.LOAD, yychar, yyline, yytext() );
          }
        case 558: break;
        case 277: 
          { return new Symbol(sym.CURRENT_TIME, yychar, yyline, yytext() );
          }
        case 559: break;
        case 248: 
          { return new Symbol(sym.INTERSECT, yychar, yyline, yytext() );
          }
        case 560: break;
        case 18: 
          { return new Symbol(sym.Aparentesis, yychar, yyline, yytext() );
          }
        case 561: break;
        case 149: 
          { return new Symbol(sym.WHERE, yychar, yyline, yytext() );
          }
        case 562: break;
        case 271: 
          { return new Symbol(sym.IDENTITYCOL, yychar, yyline, yytext() );
          }
        case 563: break;
        case 280: 
          { return new Symbol(sym.FASTFORWARD, yychar, yyline, yytext() );
          }
        case 564: break;
        case 272: 
          { return new Symbol(sym.SYSTEM_USER, yychar, yyline, yytext() );
          }
        case 565: break;
        case 62: 
          { return new Symbol(sym.AVG, yychar, yyline, yytext() );
          }
        case 566: break;
        case 270: 
          { return new Symbol(sym.RECONFIGURE, yychar, yyline, yytext() );
          }
        case 567: break;
        case 180: 
          { return new Symbol(sym.BACKUP, yychar, yyline, yytext() );
          }
        case 568: break;
        case 187: 
          { return new Symbol(sym.NUMERIC, yychar, yyline, yytext() );
          }
        case 569: break;
        case 167: 
          { return new Symbol(sym.CURSOR, yychar, yyline, yytext() );
          }
        case 570: break;
        case 25: 
          { return new Symbol(sym.Igual, yychar, yyline, yytext() );
          }
        case 571: break;
        case 203: 
          { return new Symbol(sym.OFFSETS, yychar, yyline, yytext() );
          }
        case 572: break;
        case 276: 
          { return new Symbol(sym.CURRENT_DATE, yychar, yyline, yytext() );
          }
        case 573: break;
        case 136: 
          { return new Symbol(sym.CHECK, yychar, yyline, yytext() );
          }
        case 574: break;
        case 113: 
          { return new Symbol(sym.FROM, yychar, yyline, yytext() );
          }
        case 575: break;
        case 24: 
          { return new Symbol(sym.Menor, yychar, yyline, yytext() );
          }
        case 576: break;
        case 218: 
          { return new Symbol(sym.NVARCHAR, yychar, yyline, yytext() );
          }
        case 577: break;
        case 169: 
          { return new Symbol(sym.CALLER, yychar, yyline, yytext() );
          }
        case 578: break;
        case 231: 
          { return new Symbol(sym.CONTINUE, yychar, yyline, yytext() );
          }
        case 579: break;
        case 139: 
          { return new Symbol(sym.INPUT, yychar, yyline, yytext() );
          }
        case 580: break;
        case 250: 
          { return new Symbol(sym.WRITETEXT, yychar, yyline, yytext() );
          }
        case 581: break;
        case 253: 
          { return new Symbol(sym.DEALLOCATE, yychar, yyline, yytext() );
          }
        case 582: break;
        case 148: 
          { return new Symbol(sym.FETCH, yychar, yyline, yytext() );
          }
        case 583: break;
        case 17: 
          { return new Symbol(sym.Ccorchete, yychar, yyline, yytext() );
          }
        case 584: break;
        case 188: 
          { return new Symbol(sym.NOCHECK, yychar, yyline, yytext() );
          }
        case 585: break;
        case 46: 
          { return new Symbol(sym.Dparentesis, yychar, yyline, yytext() );
          }
        case 586: break;
        case 3: 
          { return new Symbol(sym.Div, yychar, yyline, yytext() );
          }
        case 587: break;
        case 289: 
          { return new Symbol(sym.DATETIMEOFFSET, yychar, yyline, yytext() );
          }
        case 588: break;
        case 152: 
          { return new Symbol(sym.UNIQUE, yychar, yyline, yytext() );
          }
        case 589: break;
        case 91: 
          { return new Symbol(sym.TEXT, yychar, yyline, yytext() );
          }
        case 590: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
